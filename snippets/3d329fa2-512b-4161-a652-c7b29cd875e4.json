{
  "uuid": "3d329fa2-512b-4161-a652-c7b29cd875e4",
  "name": "EnumZeichenkette",
  "description": "legt eine neue Klasse für einen Enum Zeichenkette an (Schlüssel ist ein String)",
  "extraSearchTerms": [
    "EnumZeichenkette"
  ],
  "tags": [
    "ged",
    "newClass"
  ],
  "code": "package ${enclosing_package};\r\n\r\n/* \r\n * Projekt JoKer - Java basiertes, objektorientiertes Kernprojekt \r\n * (c)opyright ${year} Bausparkasse Mainz AG \r\n */ \r\n \r\nimport de.jdpe.bof.bo.pm.IEnumZeichenkette;\r\n \r\n/**\r\n * Enum für das ${todo}.\u003cbr\u003e\r\n * \u003cbr\u003e\r\n * @author ${user}\r\n * @version $$Id$$\r\n */\r\npublic enum ${primary_type_name} implements IEnumZeichenkette\r\n{\r\n  ${cursor}\r\n\r\n  ;\r\n\r\n  /**\r\n   * Liefert die Enumausprägung zum übergebenen Schlüssel.\u003cBR\u003e\r\n   * \u003cBR\u003e\r\n   * @param aSchluessel String\r\n   * @return EnumAuszahlungsart\r\n   */\r\n  public static ${primary_type_name} gibEnumZuSchluessel(final String aSchluessel)\r\n  {\r\n    ${primary_type_name} result \u003d null;\r\n    ${primary_type_name}[] alleEnums \u003d values();\r\n\r\n    for (int i \u003d 0; i \u003c alleEnums.length; i++)\r\n    {\r\n      if (alleEnums[i].gibSchluessel().equals(aSchluessel))\r\n      {\r\n        result \u003d alleEnums[i];\r\n        break;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Wert des Schlüssel/Wert-Paars. Beschreibung des Schlüssels.\u003cBR\u003e\r\n   * \u003cBR\u003e   \r\n   */\r\n  private String beschreibung \u003d null;\r\n\r\n  /**\r\n   * Schlüssel des Schlüssel/Wert-Paars.\u003cBR\u003e\r\n   * \u003cBR\u003e   \r\n   */\r\n  private String schluessel \u003d null;\r\n\r\n  /**\r\n   * Privater Konstruktor der Klasse ${primary_type_name}.\r\n   * @param aSchluessel Schlüssel des Enums\r\n   * @param aBeschreibung Beschreibung des Enums\r\n   */\r\n  private ${primary_type_name}(final String aSchluessel,\r\n    final String aBeschreibung)\r\n  {\r\n    this.schluessel \u003d aSchluessel;\r\n    this.beschreibung \u003d aBeschreibung;\r\n  }\r\n\r\n  /**\r\n   * Liefert die Beschreibung der enum-Ausprägung.\u003cBR\u003e\r\n   * \r\n   * @return String\r\n   */\r\n  @Override\r\n  public String gibBeschreibung()\r\n  {\r\n    return this.beschreibung;\r\n  }\r\n\r\n  /**\r\n   * Liefert den Schlüssel der enum-Ausprägung.\u003cBR\u003e\r\n   * \r\n   * @return String\r\n   */\r\n  @Override\r\n  public String gibSchluessel()\r\n  {\r\n    return this.schluessel;\r\n  }\r\n\r\n  /**\r\n   * Überschreibt die toString()-Methode.\u003cBR\u003e\r\n   * Liefert eine Kombination aus Schlüssel und Beschreibung zurück.\u003cBR\u003e\r\n   * \r\n   * @return String\r\n   */\r\n  @Override\r\n  public String toString()\r\n  {\r\n    return \"\u003c\" + gibSchluessel() + \", \" + gibBeschreibung() + \"\u003e\";\r\n  }\r\n}\r\n\r\n/*\r\n * $$Log$$\r\n */",
  "location": "FILE",
  "filenameRestrictions": [],
  "dependencies": []
}