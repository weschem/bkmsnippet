{
  "uuid": "434f8a21-b9e0-4271-8cc9-f1b0a0a42a08",
  "name": "BO",
  "description": "Business Object - legt eine neue Klasse für ein Business Object an",
  "extraSearchTerms": [
    "BO",
    "Business Object",
    "Entitaet"
  ],
  "tags": [
    "ged",
    "newClass"
  ],
  "code": "package ${enclosing_package};\r\n\r\n/* \r\n * Projekt JoKer - Java basiertes, objektorientiertes Kernprojekt \r\n * (c)opyright ${year} Bausparkasse Mainz AG \r\n */\r\nimport de.bkm.bes.basis.annotation.Indexing;\r\nimport de.bkm.bes.basis.annotation.IndexingType;\r\nimport de.bkm.bes.basis.annotation.Persistence;\r\nimport de.jdpe.bof.bo.eh.BoException;\r\nimport de.jdpe.bof.bo.pm.BoId;\r\nimport de.jdpe.bof.bo.pm.BoInterface;\r\nimport de.jdpe.bof.bo.pm.TaskServerControllerInterface;\r\n\r\n/**\r\n * Business Object ${primary_type_name}.\u003cbr\u003e\r\n * ${TODO}\r\n * \u003cbr\u003e\r\n * @author ${user}\r\n * @version $$Id$$\r\n */\r\n@Persistence(true)\r\npublic class ${primary_type_name} implements BoInterface\r\n{\r\n\r\n  /**\r\n   * Eindeutige BoId des Business Objects.\r\n   */\r\n  private transient BoId boId;\r\n\r\n  /**\r\n   * Object-Nummer der BoId des Business Objects.\r\n   * @see #boId\r\n   */\r\n  @Indexing(IndexingType.INDEX)\r\n  private long objectNr;\r\n\r\n  /**\r\n   * Server-Nummer der BoId des Business Objects.\r\n   * @see #boId\r\n   */\r\n  @Indexing(IndexingType.INDEX)\r\n  private long serverNr;\r\n\r\n  /**\r\n   * TaskServerController der die UnitOfWork hält.\r\n   */\r\n  private transient TaskServerControllerInterface taskServerControllerInterface;\r\n\r\n  /**\r\n   * TOPLink interne Version des Business Objects.\r\n   */\r\n  @Indexing(IndexingType.NO_INDEX)\r\n  private long version;\r\n\r\n  /**\r\n   * Standard-Konstruktor für die Klasse ${primary_type_name}\r\n   */\r\n  public ${primary_type_name}()\r\n  {\r\n    // Nothing\r\n  }\r\n\r\n  /**\r\n   * Konstruktor mit BoId für die Klasse ${primary_type_name}\r\n   * @param aBoId BoId der Klasse\r\n   */\r\n  public ${primary_type_name}(BoId aBoId)\r\n  {\r\n    setBoId(aBoId);\r\n  }\r\n\r\n  /**\r\n   * Löscht das Business Object aus der Datenbank.\r\n   */\r\n  public void delete()\r\n  {\r\n    getTaskServerControllerInterface().deleteBo(this);\r\n  }\r\n\r\n  /**\r\n   * Liefert die eindeutige BoId des Business Objects.\r\n   *\r\n   * @return eindeutige BoId des Business Objects\r\n   */\r\n  public BoId getBoId()\r\n  {\r\n    if (this.boId \u003d\u003d null)\r\n    {\r\n      this.boId \u003d new BoId(\r\n        this.serverNr, this.objectNr, this.getRoleName());\r\n    }\r\n    return this.boId;\r\n  }\r\n\r\n  /**\r\n   * Liefert die Object-Nummer des Business Objects.\r\n   *\r\n   * @return Object-Nummer als long\r\n   */\r\n  public long getObjectNr()\r\n  {\r\n    return this.objectNr;\r\n  }\r\n\r\n  /**\r\n   * Liefert den RoleName der Klasse.\r\n   *\r\n   * @return RoleName der Klasse\r\n   */\r\n  public String getRoleName()\r\n  {\r\n    return getClass().getName();\r\n  }\r\n\r\n  /**\r\n   * Liefert die Server-Nummer des Business Objects.\r\n   *\r\n   * @return Server-Nummer als long\r\n   */\r\n  public long getServerNr()\r\n  {\r\n    return this.serverNr;\r\n  }\r\n\r\n  /**\r\n   * Gibt das TaskServerControllerInterface zurück.\r\n   *\r\n   * @return TaskServerController\r\n   */\r\n  public TaskServerControllerInterface getTaskServerControllerInterface()\r\n  {\r\n    return this.taskServerControllerInterface;\r\n  }\r\n\r\n  /**\r\n   * Liefert die Versionsnummer des Business Objects.\r\n   *\r\n   * @return Versionsnummer als long\r\n   */\r\n  public long getVersion()\r\n  {\r\n    return this.version;\r\n  }\r\n\r\n  /**\r\n   * Initialisierung des Objektes bei Erzeugung\r\n   */\r\n  public void init()\r\n  {\r\n    // Nothing\r\n  }\r\n\r\n  /**\r\n   * Mit Hilfe dieser Methode setzt der Konstruktor die BoId.\r\n   *\r\n   * @param aBoId BoId für das Objekt\r\n   */\r\n  protected final void setBoId(final BoId aBoId)\r\n  {\r\n    if (!aBoId.getRoleName().equals(\r\n      this.getRoleName()))\r\n    {\r\n      throw new BoException(\r\n        \"Rolename mismatch: \"\r\n          + this.getRoleName() + \" !\u003d \" + aBoId.getRoleName());\r\n    }\r\n    this.serverNr \u003d aBoId.getServerNr();\r\n    this.objectNr \u003d aBoId.getObjectNr();\r\n    this.boId \u003d aBoId;\r\n  }\r\n\r\n  /**\r\n   * Setzt die Server-Nummer des BusinessObjects.\r\n   * \u003cb\u003eDiese Methode wird von TopLink benötigt, sie darf nicht benutzt werden!\u003c/b\u003e\r\n   *\r\n   * @param aObjectNr Object-Nummer des BusinessObjects\r\n   */\r\n  public void setObjectNr(final long aObjectNr)\r\n  {\r\n    this.objectNr \u003d aObjectNr;\r\n  }\r\n\r\n  /**\r\n   * Setzt die Server-Nummer des BusinessObjects.\r\n   * \u003cb\u003eDiese Methode wird von TopLink benötigt, sie darf nicht benutzt werden!\u003c/b\u003e\r\n   *\r\n   * @param aServerNr Server-Nummer des BusinessObjects\r\n   */\r\n  public void setServerNr(final long aServerNr)\r\n  {\r\n    this.serverNr \u003d aServerNr;\r\n  }\r\n\r\n  /**\r\n   * Setzt den TaskServerController.\r\n   *\r\n   * @param aTsc TaskServerController der die UnitOfWork hält.\r\n   */\r\n  public void setTaskServerControllerInterface(final TaskServerControllerInterface aTsc)\r\n  {\r\n    this.taskServerControllerInterface \u003d aTsc;\r\n  }\r\n\r\n  /**\r\n   * Setzt die Versionsnummer des BusinessObjects.\r\n   * \u003cb\u003eDiese Methode wird von TopLink benötigt, sie darf nicht benutzt werden!\u003c/b\u003e\r\n   *\r\n   * @param aVersionNr Versionsnummer des BusinessObjects\r\n   */\r\n  public void setVersion(final long aVersionNr)\r\n  {\r\n    this.version \u003d aVersionNr;\r\n  }\r\n\r\n  /**\r\n   * @see java.lang.Object#equals(java.lang.Object)\r\n   */\r\n  public boolean equals(final Object obj)\r\n  {\r\n    boolean result \u003d false;\r\n    if (this \u003d\u003d obj)\r\n    {\r\n      result \u003d true;\r\n    }\r\n    else if (obj instanceof ${primary_type_name})\r\n    {\r\n      result \u003d getBoId().equals(\r\n        ((${primary_type_name}) obj).getBoId());\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\n/*\r\n * $$Log$$\r\n */",
  "location": "FILE",
  "filenameRestrictions": [],
  "dependencies": []
}