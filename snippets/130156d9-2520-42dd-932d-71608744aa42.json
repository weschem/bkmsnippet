{
  "uuid": "130156d9-2520-42dd-932d-71608744aa42",
  "name": "Spezialisierung Fassade",
  "description": "legt eine neue Klasse für eine spezialisierte Fassade an",
  "extraSearchTerms": [
    "Spezialisierung",
    "Fassade"
  ],
  "tags": [
    "dienste",
    "newClass"
  ],
  "code": "package ${enclosing_package};\r\n\r\n/* \r\n * Projekt JoKer - Java basiertes, objektorientiertes Kernprojekt \r\n * (c)opyright ${year} Bausparkasse Mainz AG \r\n */\r\nimport de.jdpe.bof.bo.pm.BoId;\r\n\r\n/**\r\n * Fassade ${primary_type_name}\r\n * stellt eine Spezialisierung der Klasse ${fassadeTopLevelName:var(java.lang.String)} dar.\u003cbr\u003e\r\n * \u003cbr\u003e\r\n * Fassade des Business Object ${businessObjectName:var(java.lang.String)}\r\n * und dem zugehörigen Handle ${businessObjectHandleName:var(java.lang.String)}\r\n * \u003cbr\u003e\r\n * @author ${user}\r\n * @version $$Id$$\r\n */\r\n@Persistence(false)\r\npublic class ${primary_type_name} extends ${fassadeTopLevelName}\r\n{\r\n  /**\r\n   * Erzeugt eine Fassade für das übergebene Handle. \r\n   * \r\n   * @param aHandle Handle des Bos der Fassade\r\n   * @return ${primary_type_name}\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  static public ${primary_type_name} erzeugeFassade(final ${businessObjectHandleName} aHandle)\r\n  {\r\n     return (${primary_type_name}) FassadenFactory.erzeugeFassade(aHandle, ${primary_type_name}.class);\r\n  }\r\n  \r\n  /**\r\n   * Erzeugt eine Fassade ${primary_type_name}.\u003cbr/\u003e\r\n   * \u003cbr/\u003e\r\n   * @param aBoId für den eine Fassade erstellt werden soll.\r\n   * @param aTsc\r\n   * @return Neue Fassade ${primary_type_name}.\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public static ${primary_type_name} erzeugeFassade(final BoId aBoId,\r\n    final TaskServerControllerInterface aTsc)\r\n  {\r\n    return FassadenFactory.erzeugeFassade(aTsc.readBo(aBoId, ${businessObjectName}.class),\r\n      ${primary_type_name}.class);\r\n  }\r\n\r\n  /**\r\n   * Erzeugt eine Fassade ${primary_type_name} im gewünschten Zustand.\u003cbr/\u003e\r\n   * \u003cbr/\u003e\r\n   * @param aBoId für den eine Fassade erstellt werden soll.\r\n   * @param aTsc\r\n   * @param aKontext Kontext, mit dem ${primary_type_name} initialisiert werden soll.\r\n   * @return Neue Fassade ${primary_type_name}.\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public static BoF_ABB erzeugeFassade(final BoId aBoId,\r\n    final TaskServerControllerInterface aTsc, final BotContext aKontext)\r\n  {\r\n    return FassadenFactory.erzeugeFassade(aTsc.readBo(aBoId, ${businessObjectName}.class),\r\n      aKontext, ${primary_type_name}.class);\r\n  }\r\n\r\n  /**\r\n   * Standardkonstruktor der Klasse ${primary_type_name}.\r\n   */\r\n  public ${primary_type_name}()\r\n  {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Konstruktor mit BoId für die Klasse ${primary_type_name}\r\n   * @param aBoId BoId der Klasse\r\n   */\r\n  public ${primary_type_name}(final BoId aBoId)\r\n  {\r\n    super(aBoId);\r\n  }\r\n\r\n  /**\r\n   * Vergleicht die BoIds der persistenten Entitäten.\r\n   *\r\n   * @see java.lang.Object#equals(java.lang.Object)\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public boolean equals(final Object obj)\r\n  {\r\n    boolean result \u003d false;\r\n    if (this \u003d\u003d obj)\r\n    {\r\n      result \u003d true;\r\n    }\r\n    else if (obj instanceof ${primary_type_name})\r\n    {\r\n      result \u003d \r\n      \tgibHandle().getBoId().equals(\r\n        \t((${primary_type_name}) obj).gibHandle().getBoId());\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n  /**\r\n   * Initialisierung des Objektes bei Erzeugung\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public void init()\r\n  {\r\n    super.init();\r\n  }\r\n\r\n  /**\r\n   * Konstruktor der Fassade ${primary_type_name}.\r\n   * \u003cBR\u003e\r\n   * Die Fassade wird mit dem übergebenem Handle initialisiert.\r\n   * \r\n   * @param aHandle ${businessObjectHandleName} Handle des Bos\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  protected void init(final ${businessObjectHandleName} aHandle)\r\n  {\r\n    super.init(aHandle);\r\n  }\r\n  \r\n  /**\r\n   * Fassadeninterne Methode zur Ermittlung des Business Objects.\r\n   *\r\n   * @return ${businessObjectName} Business Object, welches durch die Fassade repräsentiert wird\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  protected ${businessObjectName} gibBusinessObject()\r\n  {\r\n    return (${businessObjectName}) super.gibBusinessObject();\r\n  }\r\n}\r\n\r\n/*\r\n * $$Log$$\r\n */",
  "location": "FILE",
  "filenameRestrictions": [],
  "dependencies": []
}