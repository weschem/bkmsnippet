{
  "uuid": "42ff80b7-9258-4e54-8672-1745732dd7a6",
  "name": "Fachkontext Gueltigkeit",
  "description": "legt eine neue Klasse für die Fachkontext Gültigkeit eines Business Object an",
  "extraSearchTerms": [
    "Gültigkeit",
    "Fachkontext"
  ],
  "tags": [
    "ged",
    "newClass"
  ],
  "code": "package ${enclosing_package};\r\n\r\n/* \r\n * Projekt JoKer - Java basiertes, objektorientiertes Kernprojekt \r\n * (c)opyright ${year} Bausparkasse Mainz AG \r\n */\r\n\r\nimport java.sql.Date;\r\n\r\nimport org.eclipse.persistence.indirection.ValueHolder;\r\nimport org.eclipse.persistence.indirection.ValueHolderInterface;\r\n\r\nimport de.bkm.bes.basis.annotation.Indexing;\r\nimport de.bkm.bes.basis.annotation.IndexingType;\r\nimport de.bkm.bes.basis.annotation.Persistence;\r\nimport de.bkm.bes.basis.exceptions.BesGEDRuntimeException;\r\nimport de.bkm.bes.basis.exceptions.BesReferentielleIntegritaetException;\r\nimport de.bkm.bes.basis.exceptions.BesUngueltigerParameterException;\r\nimport de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextGueltigkeit;\r\nimport de.bkm.bes.basis.history.entity.BoIKopierfaehig;\r\nimport de.jdpe.bof.bo.eh.BoException;\r\nimport de.jdpe.bof.bo.pm.BoId;\r\nimport de.jdpe.bof.bo.pm.BoInterface;\r\nimport de.jdpe.bof.bo.pm.TaskServerControllerInterface;\r\nimport de.jdpe.bof.bo.tm.BotDate;\r\nimport de.jdpe.bof.bo.tm.BotPrecision;\r\n\r\n/**\r\n * Enitätenstatus ${primary_type_name}.\u003cbr\u003e\r\n * \u003cbr\u003e\r\n * @author ${user}\r\n * @version $$Id$$\r\n */\r\n@Persistence(true)\r\npublic class ${primary_type_name}\r\n  implements BoIFachkontextGueltigkeit\r\n{\r\n  /**\r\n   * Beziehung zum Vorgänger der Gültigkeit ${primary_type_name}\r\n   */\r\n  @Indexing(IndexingType.INDEX)\r\n  private ValueHolderInterface vorgaenger \u003d new ValueHolder();\r\n\r\n  /**\r\n   * Datum der fachlichen Freigabe\r\n   */\r\n  private transient BotDate freigabe \u003d null;\r\n\r\n  /**\r\n   * Attribut für persitentes TOPLink-Mapping um\r\n   * festzuhalten der BotDate freigabe null ist.\r\n   */\r\n  @Indexing(IndexingType.NO_INDEX)\r\n  private boolean freigabeIsN \u003d true;\r\n\r\n  /**\r\n   * Attribut für persitentes TOPLink-Mapping um die\r\n   * Präzision des BotDate freigabe zu speichern.\r\n   */\r\n  @Indexing(IndexingType.NO_INDEX)\r\n  private int freigabePre \u003d -1;\r\n\r\n  /**\r\n   * Attribut für persitentes TOPLink-Mapping um den\r\n   * Datumswert des BotDate freigabe zu speichern.\r\n   */\r\n  @Indexing(IndexingType.NO_INDEX)\r\n  private Date freigabeDat \u003d null;\r\n\r\n  /**\r\n   * Beginn der fachlichen Gültigkeit\r\n   */\r\n  private transient BotDate wirkungVon \u003d null;\r\n\r\n  /**\r\n   * Attribut für persitentes TOPLink-Mapping um\r\n   * festzuhalten der BotDate wirkungVon null ist.\r\n   */\r\n  @Indexing(IndexingType.NO_INDEX)\r\n  private boolean wirkungVonIsN \u003d true;\r\n\r\n  /**\r\n   * Attribut für persitentes TOPLink-Mapping um die\r\n   * Präzision des BotDate wirkungVon zu speichern.\r\n   */\r\n  @Indexing(IndexingType.NO_INDEX)\r\n  private int wirkungVonPre \u003d -1;\r\n\r\n  /**\r\n   * Attribut für persitentes TOPLink-Mapping um den\r\n   * Datumswert des BotDate wirkungVon zu speichern.\r\n   */\r\n  @Indexing(IndexingType.NO_INDEX)\r\n  private Date wirkungVonDat \u003d null;\r\n\r\n  /**\r\n   * Ende der fachlichen Gültigkeit (nur Terminierung)\r\n   */\r\n  private transient BotDate wirkungBis \u003d null;\r\n\r\n  /**\r\n   * Attribut für persitentes TOPLink-Mapping um\r\n   * festzuhalten der BotDate wirkungBis null ist.\r\n   */\r\n  @Indexing(IndexingType.NO_INDEX)\r\n  private boolean wirkungBisIsN \u003d true;\r\n\r\n  /**\r\n   * Attribut für persitentes TOPLink-Mapping um die\r\n   * Präzision des BotDate wirkungBis zu speichern.\r\n   */\r\n  @Indexing(IndexingType.NO_INDEX)\r\n  private int wirkungBisPre \u003d -1;\r\n\r\n  /**\r\n   * Attribut für persitentes TOPLink-Mapping um den\r\n   * Datumswert des BotDate wirkungBis zu speichern.\r\n   */\r\n  @Indexing(IndexingType.NO_INDEX)\r\n  private Date wirkungBisDat \u003d null;\r\n\r\n  /**\r\n   * Kennzeichen für logisch gelöschte Gültigkeiten\r\n   *\r\n   */\r\n  @Indexing(IndexingType.NO_INDEX)\r\n  private boolean logischGeloescht \u003d false;\r\n\r\n  /**\r\n   * Eindeutige BoId des Business Objects.\r\n   */\r\n  private transient BoId boId;\r\n\r\n  /**\r\n   * Object-Nummer der BoId des Business Objects.\r\n   * @see #boId\r\n   */\r\n  @Indexing(IndexingType.INDEX)\r\n  private long objectNr;\r\n\r\n  /**\r\n   * Server-Nummer der BoId des Business Objects.\r\n   * @see #boId\r\n   */\r\n  @Indexing(IndexingType.INDEX)\r\n  private long serverNr;\r\n\r\n  /**\r\n   * TaskServerController der die UnitOfWork hält.\r\n   */\r\n  private transient TaskServerControllerInterface taskServerControllerInterface;\r\n\r\n  /**\r\n   * TOPLink interne Version des Business Objects.\r\n   */\r\n  @Indexing(IndexingType.NO_INDEX)\r\n  private long version;\r\n\r\n  /**\r\n   * Standard-Konstruktor für die Klasse ${primary_type_name}\r\n   */\r\n  public ${primary_type_name}()\r\n  {\r\n    // keine Operation\r\n  }\r\n\r\n  /**\r\n   * Konstruktor mit BoId für die Klasse ${primary_type_name}\r\n   * @param aBoId BoId der Klasse\r\n   */\r\n  public ${primary_type_name}(final BoId aBoId)\r\n  {\r\n    setBoId(aBoId);\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextGueltigkeit#beantrageAenderung()\r\n   */\r\n  @Override\r\n  public BoIFachkontextGueltigkeit beantrageAenderung()\r\n  {\r\n    ${primary_type_name} result;\r\n\r\n    if ((result \u003d this).getFreigabe() !\u003d null)\r\n    {\r\n      result \u003d (${primary_type_name}) erzeugeKopie();\r\n    }\r\n\r\n    return result;\r\n  }\r\n  \r\n  /**\r\n   * @see de.bkm.bes.basis.history.entity.BoIKopierfaehig#erzeugeKopie()\r\n   */\r\n  @Override\r\n  public BoIKopierfaehig erzeugeKopie()\r\n  {\r\n    ${primary_type_name} kopie \u003d getTaskServerControllerInterface()\r\n      .getNewBo(getClass());\r\n\r\n    kopie.setFreigabe(null);\r\n    kopie.setWirkungVon(getWirkungVon());\r\n    kopie.setWirkungBis(null);\r\n    kopie.setVorgaenger(this);\r\n    \r\n    // TODO fachliche Attribute kopieren\r\n\r\n    return kopie;\r\n  }\r\n\r\n  /**\r\n   * Löscht das Business Object aus der Datenbank.\r\n   */\r\n  @Override\r\n  public void delete()\r\n  {\r\n    getTaskServerControllerInterface().deleteBo(this);\r\n  }\r\n\r\n  /**\r\n   * @see java.lang.Object#equals(java.lang.Object)\r\n   */\r\n  @Override\r\n  public boolean equals(final Object obj)\r\n  {\r\n    boolean result \u003d false;\r\n    if (this \u003d\u003d obj)\r\n    {\r\n      result \u003d true;\r\n    }\r\n    else if (obj instanceof ${primary_type_name})\r\n    {\r\n      result \u003d getBoId().equals(((${primary_type_name}) obj).getBoId());\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextGueltigkeit#erteileFreigabe(de.jdpe.bof.bo.tm.BotDate)\r\n   */\r\n  @Override\r\n  public void erteileFreigabe(final BotDate aFreigabe)\r\n  {\r\n    if (aFreigabe \u003d\u003d null)\r\n    {\r\n      //\r\n      // Fehler bei Parameterübergabe: Der Parameter \u0027\u0027{0}\u0027\u0027 wurde nicht\r\n      // angegeben (Wert: \u003cnull\u003e).\r\n      //\r\n      throw new BesUngueltigerParameterException(\r\n        BesUngueltigerParameterException.ERR_PARAMETER_UNGUELTIG_NULL,\r\n        \"aFreigabe\");\r\n    }\r\n\r\n    if (aFreigabe.precision() !\u003d BotPrecision.TAG)\r\n    {\r\n      //\r\n      // Fehler bei Parameterübergabe: Das Datum \u0027\u0027{0}\u0027\u0027 hat nicht die\r\n      // Genauigkeit \u0027\u0027{1}\u0027\u0027.\r\n      //\r\n      throw new BesUngueltigerParameterException(\r\n        BesUngueltigerParameterException.ERR_DATUMGENAUIGKEIT_UNGUELTIG,\r\n        new String[] { \"aFreigabe\", BotPrecision.TAG.toString() });\r\n    }\r\n\r\n    if (getFreigabe() !\u003d null)\r\n    {\r\n      //\r\n      // Fehler bei der Überprüfung des Objekts mit der BoId {0}: Eine Änderung\r\n      // ist unzulässig, da ein bestandswirksames Statusobjekt existiert.\r\n      //\r\n      throw new BesReferentielleIntegritaetException(\r\n        BesReferentielleIntegritaetException.ERR_BESTANDSWIRKSAMER_STATUS_EXISTIERT,\r\n        String.valueOf(getBoId()));\r\n    }\r\n\r\n    if (getWirkungVon() \u003d\u003d null)\r\n    {\r\n      //\r\n      // Fehler bei der Überprüfung des Objekts mit der BoId {0}. Das Attribut\r\n      // {1} ist nicht gesetzt.\r\n      //\r\n      throw new BesGEDRuntimeException(\r\n        BesGEDRuntimeException.ERR_PFLICHTATTRIBUT_FEHLT,\r\n        new String[] { String.valueOf(getBoId()), \"Wirkung von\" });\r\n    }\r\n\r\n    if ((getWirkungBis() !\u003d null) \u0026\u0026 getWirkungVon().isAfter(getWirkungBis()))\r\n    {\r\n      //\r\n      // Fehler bei der Überprüfung des Objekts mit der BoId {0}: Das Attribut\r\n      // \u0027\u0027{1}\u0027\u0027 ist mit einem ungültigen Wert belegt (Wert {2}).\r\n      //\r\n      throw new BesGEDRuntimeException(\r\n        BesGEDRuntimeException.ERR_PFLICHTATTRIBUT_UNGUELTIG,\r\n        new String[] { String.valueOf(getBoId()),\r\n          String.format(\"Wirkung bis [\u003c Wirkung von: %s]\", getWirkungVon()),\r\n          String.valueOf(getWirkungBis()) });\r\n    }\r\n\r\n    //\r\n    // Verdichtung logisch gelöschter Vorgänger\r\n    //\r\n    ${primary_type_name} vorgaenger;\r\n\r\n    if (((vorgaenger \u003d getVorgaenger()) !\u003d null)\r\n      \u0026\u0026 vorgaenger.istLogischGeloescht())\r\n    {\r\n      setVorgaenger(vorgaenger.getVorgaenger());\r\n      vorgaenger.setVorgaenger(null);\r\n      vorgaenger.delete();\r\n    }\r\n\r\n    setFreigabe(aFreigabe);\r\n  }\r\n\r\n  /**\r\n   * Liefert die eindeutige BoId des Business Objects.\r\n   *\r\n   * @return eindeutige BoId des Business Objects\r\n   */\r\n  @Override\r\n  public BoId getBoId()\r\n  {\r\n    if (this.boId \u003d\u003d null)\r\n    {\r\n      this.boId \u003d new BoId(this.serverNr, this.objectNr, this.getRoleName());\r\n    }\r\n    return this.boId;\r\n  }\r\n\r\n  /**\r\n   * Gibt den BotDate freigabe zurück.\r\n   *\r\n   * @return BotDate freigabe\r\n   * @see #freigabe\r\n   */\r\n  public BotDate getFreigabe()\r\n  {\r\n    if (!this.freigabeIsN)\r\n    {\r\n      if (this.freigabe \u003d\u003d null)\r\n      {\r\n        this.freigabe \u003d BotDate.initBotDateFromTOPLink(\r\n          this.freigabeDat.toString(), this.freigabePre);\r\n      }\r\n    }\r\n    return this.freigabe;\r\n  }\r\n\r\n  /**\r\n   * BotDate - Zugriffsmethode für das InlineMapping durch TOPLink.\r\n   * @return Datumswert des BotDate freigabe\r\n   */\r\n  public final Date getFreigabeDat()\r\n  {\r\n    return this.freigabeDat;\r\n  }\r\n\r\n  /**\r\n   * BotDate - Zugriffsmethode für das InlineMapping durch TOPLink.\r\n   * @return \u003ccode\u003etrue\u003c/code\u003e wenn der BotDate freigabe\r\n   * \u003ccode\u003enull\u003c/code\u003e ist, ansonsten \u003ccode\u003efalse\u003c/code\u003e\r\n   */\r\n  public final boolean getFreigabeIsN()\r\n  {\r\n    return this.freigabeIsN;\r\n  }\r\n\r\n  /**\r\n   * BotDate - Zugriffsmethode für das InlineMapping durch TOPLink.\r\n   * @return Präzision des BotDate freigabe\r\n   */\r\n  public final int getFreigabePre()\r\n  {\r\n    return this.freigabePre;\r\n  }\r\n\r\n  /**\r\n   * Gibt das Attribut logischGeloescht zurück.\r\n   *\r\n   * @return logischGeloescht\r\n   * @see #logischGeloescht\r\n   */\r\n  public boolean getLogischGeloescht()\r\n  {\r\n    return this.logischGeloescht;\r\n  }\r\n\r\n  /**\r\n   * Liefert die Object-Nummer des Business Objects.\r\n   *\r\n   * @return Object-Nummer als long\r\n   */\r\n  @Override\r\n  public long getObjectNr()\r\n  {\r\n    return this.objectNr;\r\n  }\r\n\r\n  /**\r\n   * Liefert den RoleName der Klasse.\r\n   *\r\n   * @return RoleName der Klasse\r\n   */\r\n  @Override\r\n  public String getRoleName()\r\n  {\r\n    return getClass().getName();\r\n  }\r\n\r\n  /**\r\n   * Liefert die Server-Nummer des Business Objects.\r\n   *\r\n   * @return Server-Nummer als long\r\n   */\r\n  @Override\r\n  public long getServerNr()\r\n  {\r\n    return this.serverNr;\r\n  }\r\n\r\n  /**\r\n   * Gibt das TaskServerControllerInterface zurück.\r\n   *\r\n   * @return TaskServerController\r\n   */\r\n  @Override\r\n  public TaskServerControllerInterface getTaskServerControllerInterface()\r\n  {\r\n    return this.taskServerControllerInterface;\r\n  }\r\n\r\n  /**\r\n   * Liefert die Versionsnummer des Business Objects.\r\n   *\r\n   * @return Versionsnummer als long\r\n   */\r\n  public long getVersion()\r\n  {\r\n    return this.version;\r\n  }\r\n\r\n  /**\r\n   * Liefert das Objekt, auf das sich die Relation vorgaenger bezieht.\r\n   *\r\n   * @return Objekt vom Typ ${primary_type_name},\r\n   * auf das die Relation vorgaenger verweist.\r\n   * @see #vorgaenger\r\n   */\r\n  public ${primary_type_name} getVorgaenger()\r\n  {\r\n    ${primary_type_name} obj \u003d (${primary_type_name}) this.vorgaenger\r\n      .getValue();\r\n\r\n    if (obj !\u003d null)\r\n    {\r\n      obj.setTaskServerControllerInterface(getTaskServerControllerInterface());\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Gibt den ValueHolder, bei einer 1:? Relation, für TOPLink zurück.\r\n   *\r\n   * @return ValueHolder für das lazy-loading von TOPLink\r\n   * @see #vorgaenger\r\n   */\r\n  public final ValueHolderInterface getVorgaengerHolder()\r\n  {\r\n    ValueHolderInterface holder \u003d this.vorgaenger;\r\n\r\n    if (holder.isInstantiated())\r\n    {\r\n      BoInterface bo \u003d (BoInterface) holder.getValue();\r\n      if ((bo !\u003d null) \u0026\u0026 !bo.getBoId().isValid())\r\n      {\r\n        holder.setValue(null);\r\n      }\r\n    }\r\n    return holder;\r\n  }\r\n\r\n  /**\r\n   * Gibt den BotDate wirkungBis zurück.\r\n   *\r\n   * @return BotDate wirkungBis\r\n   * @see #wirkungBis\r\n   */\r\n  public BotDate getWirkungBis()\r\n  {\r\n    if (!this.wirkungBisIsN)\r\n    {\r\n      if (this.wirkungBis \u003d\u003d null)\r\n      {\r\n        this.wirkungBis \u003d BotDate.initBotDateFromTOPLink(\r\n          this.wirkungBisDat.toString(), this.wirkungBisPre);\r\n      }\r\n    }\r\n    return this.wirkungBis;\r\n  }\r\n\r\n  /**\r\n   * BotDate - Zugriffsmethode für das InlineMapping durch TOPLink.\r\n   * @return Datumswert des BotDate wirkungBis\r\n   */\r\n  public final Date getWirkungBisDat()\r\n  {\r\n    return this.wirkungBisDat;\r\n  }\r\n\r\n  /**\r\n   * BotDate - Zugriffsmethode für das InlineMapping durch TOPLink.\r\n   * @return \u003ccode\u003etrue\u003c/code\u003e wenn der BotDate wirkungBis\r\n   * \u003ccode\u003enull\u003c/code\u003e ist, ansonsten \u003ccode\u003efalse\u003c/code\u003e\r\n   */\r\n  public final boolean getWirkungBisIsN()\r\n  {\r\n    return this.wirkungBisIsN;\r\n  }\r\n\r\n  /**\r\n   * BotDate - Zugriffsmethode für das InlineMapping durch TOPLink.\r\n   * @return Präzision des BotDate wirkungBis\r\n   */\r\n  public final int getWirkungBisPre()\r\n  {\r\n    return this.wirkungBisPre;\r\n  }\r\n\r\n  /**\r\n   * Gibt den BotDate wirkungVon zurück.\r\n   *\r\n   * @return BotDate wirkungVon\r\n   * @see #wirkungVon\r\n   */\r\n  public BotDate getWirkungVon()\r\n  {\r\n    if (!this.wirkungVonIsN)\r\n    {\r\n      if (this.wirkungVon \u003d\u003d null)\r\n      {\r\n        this.wirkungVon \u003d BotDate.initBotDateFromTOPLink(\r\n          this.wirkungVonDat.toString(), this.wirkungVonPre);\r\n      }\r\n    }\r\n    return this.wirkungVon;\r\n  }\r\n\r\n  /**\r\n   * BotDate - Zugriffsmethode für das InlineMapping durch TOPLink.\r\n   * @return Datumswert des BotDate wirkungVon\r\n   */\r\n  public final Date getWirkungVonDat()\r\n  {\r\n    return this.wirkungVonDat;\r\n  }\r\n\r\n  /**\r\n   * BotDate - Zugriffsmethode für das InlineMapping durch TOPLink.\r\n   * @return \u003ccode\u003etrue\u003c/code\u003e wenn der BotDate wirkungVon\r\n   * \u003ccode\u003enull\u003c/code\u003e ist, ansonsten \u003ccode\u003efalse\u003c/code\u003e\r\n   */\r\n  public final boolean getWirkungVonIsN()\r\n  {\r\n    return this.wirkungVonIsN;\r\n  }\r\n\r\n  /**\r\n   * BotDate - Zugriffsmethode für das InlineMapping durch TOPLink.\r\n   * @return Präzision des BotDate wirkungVon\r\n   */\r\n  public final int getWirkungVonPre()\r\n  {\r\n    return this.wirkungVonPre;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextGueltigkeit#gibFreigabe()\r\n   */\r\n  @Override\r\n  public BotDate gibFreigabe()\r\n  {\r\n    return getFreigabe();\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextGueltigkeit#gibVorgaenger()\r\n   */\r\n  @Override\r\n  public BoIFachkontextGueltigkeit gibVorgaenger()\r\n  {\r\n    return getVorgaenger();\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextGueltigkeit#gibWirkungBis()\r\n   */\r\n  @Override\r\n  public BotDate gibWirkungBis()\r\n  {\r\n    return getWirkungBis();\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextGueltigkeit#gibWirkungVon()\r\n   */\r\n  @Override\r\n  public BotDate gibWirkungVon()\r\n  {\r\n    return getWirkungVon();\r\n  }\r\n\r\n  /**\r\n   * @see de.jdpe.bof.bo.pm.BoInterface#init()\r\n   */\r\n  @Override\r\n  public void init()\r\n  {\r\n    // keine Operation\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextGueltigkeit#istLogischGeloescht()\r\n   */\r\n  @Override\r\n  public boolean istLogischGeloescht()\r\n  {\r\n    return getLogischGeloescht();\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextGueltigkeit#loescheBeantragung()\r\n   */\r\n  @Override\r\n  public BoIFachkontextGueltigkeit loescheBeantragung()\r\n  {\r\n    ${primary_type_name} result;\r\n\r\n    if ((result \u003d this).getFreigabe() \u003d\u003d null)\r\n    {\r\n      if ((result \u003d getVorgaenger()) !\u003d null)\r\n      {\r\n        if (result.istLogischGeloescht())\r\n        {\r\n          result.setLogischGeloescht(false);\r\n        }\r\n\r\n        setVorgaenger(null);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Mit Hilfe dieser Methode setzt der Konstruktor die BoId.\r\n   *\r\n   * @param aBoId BoId für das Objekt\r\n   */\r\n  protected final void setBoId(final BoId aBoId)\r\n  {\r\n    if (!aBoId.getRoleName().equals(this.getRoleName()))\r\n    {\r\n      throw new BoException(\"Rolename mismatch: \" + this.getRoleName() + \" !\u003d \"\r\n        + aBoId.getRoleName());\r\n    }\r\n    this.serverNr \u003d aBoId.getServerNr();\r\n    this.objectNr \u003d aBoId.getObjectNr();\r\n    this.boId \u003d aBoId;\r\n  }\r\n\r\n  /**\r\n   * Setzt den BotDate freigabe.\r\n   *\r\n   * @param aBotDate freigabe\r\n   * @see #freigabe\r\n   */\r\n  public void setFreigabe(final BotDate aBotDate)\r\n  {\r\n    if (aBotDate \u003d\u003d null)\r\n    {\r\n      this.freigabeIsN \u003d true;\r\n      this.freigabe \u003d null;\r\n      this.freigabeDat \u003d null;\r\n      this.freigabePre \u003d -1;\r\n    }\r\n    else\r\n    {\r\n      this.freigabeIsN \u003d false;\r\n      this.freigabe \u003d aBotDate;\r\n      this.freigabeDat \u003d new Date(aBotDate.getValue().getTimeInMillis());\r\n      this.freigabePre \u003d aBotDate.getPrecision();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * BotDate - Zugriffsmethode für das InlineMapping durch TOPLink.\r\n   * @param dat Datumswert des BotDate freigabe\r\n   */\r\n  public final void setFreigabeDat(final Date dat)\r\n  {\r\n    this.freigabeDat \u003d dat;\r\n    this.freigabe \u003d null;\r\n  }\r\n\r\n  /**\r\n   * BotDate - Zugriffsmethode für das InlineMapping durch TOPLink.\r\n   *\r\n   * @param isn \u003ccode\u003etrue\u003c/code\u003e wenn der BotDate freigabe\r\n   * \u003ccode\u003enull\u003c/code\u003e ist, ansonsten \u003ccode\u003efalse\u003c/code\u003e\r\n   */\r\n  public final void setFreigabeIsN(final boolean isn)\r\n  {\r\n    this.freigabeIsN \u003d isn;\r\n    this.freigabe \u003d null;\r\n  }\r\n\r\n  /**\r\n   * BotDate - Zugriffsmethode für das InlineMapping durch TOPLink.\r\n   * @param pre Präzision des BotDate freigabe\r\n   */\r\n  public final void setFreigabePre(final int pre)\r\n  {\r\n    this.freigabePre \u003d pre;\r\n    this.freigabe \u003d null;\r\n  }\r\n\r\n  /**\r\n   * Setzt das Attribut logischGeloescht.\r\n   *\r\n   * @param aValue Wert der gesetzt werden soll\r\n   * @see #logischGeloescht\r\n   */\r\n  public void setLogischGeloescht(final boolean aValue)\r\n  {\r\n    this.logischGeloescht \u003d aValue;\r\n  }\r\n\r\n  /**\r\n   * Setzt die Server-Nummer des BusinessObjects.\r\n   * \u003cb\u003eDiese Methode wird von TopLink benötigt, sie darf nicht benutzt werden!\u003c/b\u003e\r\n   *\r\n   * @param aObjectNr Object-Nummer des BusinessObjects\r\n   */\r\n  public void setObjectNr(final long aObjectNr)\r\n  {\r\n    this.objectNr \u003d aObjectNr;\r\n  }\r\n\r\n  /**\r\n   * Setzt die Server-Nummer des BusinessObjects.\r\n   * \u003cb\u003eDiese Methode wird von TopLink benötigt, sie darf nicht benutzt werden!\u003c/b\u003e\r\n   *\r\n   * @param aServerNr Server-Nummer des BusinessObjects\r\n   */\r\n  public void setServerNr(final long aServerNr)\r\n  {\r\n    this.serverNr \u003d aServerNr;\r\n  }\r\n\r\n  /**\r\n   * Setzt den TaskServerController.\r\n   *\r\n   * @param aTsc TaskServerController der die UnitOfWork hält.\r\n   */\r\n  @Override\r\n  public void setTaskServerControllerInterface(\r\n    final TaskServerControllerInterface aTsc)\r\n  {\r\n    this.taskServerControllerInterface \u003d aTsc;\r\n  }\r\n\r\n  /**\r\n   * Setzt die Versionsnummer des BusinessObjects.\r\n   * \u003cb\u003eDiese Methode wird von TopLink benötigt, sie darf nicht benutzt werden!\u003c/b\u003e\r\n   *\r\n   * @param aVersionNr Versionsnummer des BusinessObjects\r\n   */\r\n  public void setVersion(final long aVersionNr)\r\n  {\r\n    this.version \u003d aVersionNr;\r\n  }\r\n\r\n  /**\r\n   * Legt fest auf welches Objekt sich die Relation vorgaenger bezieht.\r\n   *\r\n   * @param aObj Das Objekt, vom Typ ${primary_type_name},\r\n   * zu dem eine Relation vorgaenger erzeugt werden soll.\r\n   * @see #vorgaenger\r\n   */\r\n  public void setVorgaenger(final ${primary_type_name} aObj)\r\n  {\r\n    this.vorgaenger.setValue(aObj);\r\n  }\r\n\r\n  /**\r\n   * Setzt den ValueHolder, bei einer \"1-zu\" Relation, für TOPLink.\r\n   *\r\n   * @param aValueHolder ValueHolder für das lazy-loading von TOPLink\r\n   * @see #vorgaenger\r\n   */\r\n  public final void setVorgaengerHolder(final ValueHolderInterface aValueHolder)\r\n  {\r\n    this.vorgaenger \u003d aValueHolder;\r\n  }\r\n\r\n  /**\r\n   * Setzt den BotDate wirkungBis.\r\n   *\r\n   * @param aBotDate wirkungBis\r\n   * @see #wirkungBis\r\n   */\r\n  public void setWirkungBis(final BotDate aBotDate)\r\n  {\r\n    if (aBotDate \u003d\u003d null)\r\n    {\r\n      this.wirkungBisIsN \u003d true;\r\n      this.wirkungBis \u003d null;\r\n      this.wirkungBisDat \u003d null;\r\n      this.wirkungBisPre \u003d -1;\r\n    }\r\n    else\r\n    {\r\n      this.wirkungBisIsN \u003d false;\r\n      this.wirkungBis \u003d aBotDate;\r\n      this.wirkungBisDat \u003d new Date(aBotDate.getValue().getTimeInMillis());\r\n      this.wirkungBisPre \u003d aBotDate.getPrecision();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * BotDate - Zugriffsmethode für das InlineMapping durch TOPLink.\r\n   * @param dat Datumswert des BotDate wirkungBis\r\n   */\r\n  public final void setWirkungBisDat(final Date dat)\r\n  {\r\n    this.wirkungBisDat \u003d dat;\r\n    this.wirkungBis \u003d null;\r\n  }\r\n\r\n  /**\r\n   * BotDate - Zugriffsmethode für das InlineMapping durch TOPLink.\r\n   *\r\n   * @param isn \u003ccode\u003etrue\u003c/code\u003e wenn der BotDate wirkungBis\r\n   * \u003ccode\u003enull\u003c/code\u003e ist, ansonsten \u003ccode\u003efalse\u003c/code\u003e\r\n   */\r\n  public final void setWirkungBisIsN(final boolean isn)\r\n  {\r\n    this.wirkungBisIsN \u003d isn;\r\n    this.wirkungBis \u003d null;\r\n  }\r\n\r\n  /**\r\n   * BotDate - Zugriffsmethode für das InlineMapping durch TOPLink.\r\n   * @param pre Präzision des BotDate wirkungBis\r\n   */\r\n  public final void setWirkungBisPre(final int pre)\r\n  {\r\n    this.wirkungBisPre \u003d pre;\r\n    this.wirkungBis \u003d null;\r\n  }\r\n\r\n  /**\r\n   * Setzt den BotDate wirkungVon.\r\n   *\r\n   * @param aBotDate wirkungVon\r\n   * @see #wirkungVon\r\n   */\r\n  public void setWirkungVon(final BotDate aBotDate)\r\n  {\r\n    if (aBotDate \u003d\u003d null)\r\n    {\r\n      this.wirkungVonIsN \u003d true;\r\n      this.wirkungVon \u003d null;\r\n      this.wirkungVonDat \u003d null;\r\n      this.wirkungVonPre \u003d -1;\r\n    }\r\n    else\r\n    {\r\n      this.wirkungVonIsN \u003d false;\r\n      this.wirkungVon \u003d aBotDate;\r\n      this.wirkungVonDat \u003d new Date(aBotDate.getValue().getTimeInMillis());\r\n      this.wirkungVonPre \u003d aBotDate.getPrecision();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * BotDate - Zugriffsmethode für das InlineMapping durch TOPLink.\r\n   * @param dat Datumswert des BotDate wirkungVon\r\n   */\r\n  public final void setWirkungVonDat(final Date dat)\r\n  {\r\n    this.wirkungVonDat \u003d dat;\r\n    this.wirkungVon \u003d null;\r\n  }\r\n\r\n  /**\r\n   * BotDate - Zugriffsmethode für das InlineMapping durch TOPLink.\r\n   *\r\n   * @param isn \u003ccode\u003etrue\u003c/code\u003e wenn der BotDate wirkungVon\r\n   * \u003ccode\u003enull\u003c/code\u003e ist, ansonsten \u003ccode\u003efalse\u003c/code\u003e\r\n   */\r\n  public final void setWirkungVonIsN(final boolean isn)\r\n  {\r\n    this.wirkungVonIsN \u003d isn;\r\n    this.wirkungVon \u003d null;\r\n  }\r\n\r\n  /**\r\n   * BotDate - Zugriffsmethode für das InlineMapping durch TOPLink.\r\n   * @param pre Präzision des BotDate wirkungVon\r\n   */\r\n  public final void setWirkungVonPre(final int pre)\r\n  {\r\n    this.wirkungVonPre \u003d pre;\r\n    this.wirkungVon \u003d null;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextGueltigkeit#setzeWirkungVon(de.jdpe.bof.bo.tm.BotDate)\r\n   */\r\n  @Override\r\n  public void setzeWirkungVon(final BotDate aWirkungVon)\r\n  {\r\n    if (getFreigabe() !\u003d null)\r\n    {\r\n      //\r\n      // Fehler bei der Überprüfung des Objekts mit der BoId {0}: Eine Änderung\r\n      // ist unzulässig, da ein bestandswirksames Statusobjekt existiert.\r\n      //\r\n      throw new BesReferentielleIntegritaetException(\r\n        BesReferentielleIntegritaetException.ERR_BESTANDSWIRKSAMER_STATUS_EXISTIERT,\r\n        String.valueOf(getBoId()));\r\n    }\r\n\r\n    if ((aWirkungVon !\u003d null) \u0026\u0026 (aWirkungVon.precision() !\u003d BotPrecision.TAG))\r\n    {\r\n      //\r\n      // Fehler bei Parameterübergabe: Das Datum \u0027\u0027{0}\u0027\u0027 hat nicht die\r\n      // Genauigkeit \u0027\u0027{1}\u0027\u0027.\r\n      //\r\n      throw new BesUngueltigerParameterException(\r\n        BesUngueltigerParameterException.ERR_DATUMGENAUIGKEIT_UNGUELTIG,\r\n        new String[] { \"aWirkungVon\", BotPrecision.TAG.toString() });\r\n    }\r\n\r\n    setWirkungVon(aWirkungVon);\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextGueltigkeit#storniereVormerkung()\r\n   */\r\n  @Override\r\n  public ${primary_type_name} storniereVormerkung()\r\n  {\r\n    ${primary_type_name} result;\r\n\r\n    if (getFreigabe() \u003d\u003d null)\r\n    {\r\n      //\r\n      // Fehler bei der Überprüfung des Objekts mit der BoId {0}. Das Attribut\r\n      // {1} ist nicht gesetzt.\r\n      //\r\n      throw new BesGEDRuntimeException(\r\n        BesGEDRuntimeException.ERR_PFLICHTATTRIBUT_FEHLT,\r\n        new String[] { String.valueOf(getBoId()), \"Freigabe\" });\r\n    }\r\n\r\n    if (getVorgaenger() \u003d\u003d null)\r\n    {\r\n      //\r\n      // Fehler bei der Überprüfung des Objekts mit der BoId {0}.\r\n      // Keine Beziehung zu \u0027\u0027{1}\u0027\u0027 vorhanden.\r\n      //\r\n      throw new BesReferentielleIntegritaetException(\r\n        BesReferentielleIntegritaetException.ERR_PFLICHTBEZIEHUNG_FEHLT,\r\n        new String[] { String.valueOf(getBoId()), \"vorgaenger\" });\r\n    }\r\n    else\r\n    {\r\n      result \u003d (${primary_type_name}) getVorgaenger()\r\n        .beantrageAenderung();\r\n      result.setWirkungBis(getVorgaenger().getWirkungBis());\r\n      result.setVorgaenger(this);\r\n      setLogischGeloescht(true);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextGueltigkeit#terminiere(de.jdpe.bof.bo.tm.BotDate)\r\n   */\r\n  @Override\r\n  public void terminiere(final BotDate aWirkungBis)\r\n  {\r\n    if (getFreigabe() !\u003d null)\r\n    {\r\n      //\r\n      // Fehler bei der Überprüfung des Objekts mit der BoId {0}: Eine Änderung\r\n      // ist unzulässig, da ein bestandswirksames Statusobjekt existiert.\r\n      //\r\n      throw new BesReferentielleIntegritaetException(\r\n        BesReferentielleIntegritaetException.ERR_BESTANDSWIRKSAMER_STATUS_EXISTIERT,\r\n        String.valueOf(getBoId()));\r\n    }\r\n\r\n    if ((aWirkungBis !\u003d null) \u0026\u0026 (aWirkungBis.precision() !\u003d BotPrecision.TAG))\r\n    {\r\n      //\r\n      // Fehler bei Parameterübergabe: Das Datum \u0027\u0027{0}\u0027\u0027 hat nicht die\r\n      // Genauigkeit \u0027\u0027{1}\u0027\u0027.\r\n      //\r\n      throw new BesUngueltigerParameterException(\r\n        BesUngueltigerParameterException.ERR_DATUMGENAUIGKEIT_UNGUELTIG,\r\n        new String[] { \"aWirkungBis\", BotPrecision.TAG.toString() });\r\n    }\r\n\r\n    setWirkungBis(aWirkungBis);\r\n  }\r\n\r\n}\r\n\r\n/*\r\n * $$Log$$\r\n */\r\n",
  "location": "FILE",
  "filenameRestrictions": [],
  "dependencies": []
}