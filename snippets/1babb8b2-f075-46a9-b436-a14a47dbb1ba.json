{
  "uuid": "1babb8b2-f075-46a9-b436-a14a47dbb1ba",
  "name": "Fachkontext Relation",
  "description": "erzeugt eine Fachkontext Relationenklasse mit den möglichen Ausprägungen \"1-1\", \"1-*\", \"*-1\" und \"*-*\"",
  "extraSearchTerms": [],
  "tags": [],
  "code": "package ${enclosing_package};\r\n\r\n/* \r\n * Projekt JoKer - Java basiertes, objektorientiertes Kernprojekt \r\n * (c)opyright ${year} Bausparkasse Mainz AG \r\n */\r\n\r\nimport org.eclipse.persistence.indirection.ValueHolder;\r\nimport org.eclipse.persistence.indirection.ValueHolderInterface;\r\n\r\nimport de.bkm.bes.basis.annotation.Indexing;\r\nimport de.bkm.bes.basis.annotation.IndexingType;\r\nimport de.bkm.bes.basis.annotation.Persistence;\r\nimport de.bkm.bes.basis.exceptions.BesGEDRuntimeException;\r\nimport de.bkm.bes.basis.exceptions.BesUngueltigerParameterException;\r\nimport de.bkm.bes.basis.gueltigkeit.Fachkontext;\r\nimport de.bkm.bes.basis.gueltigkeit.Kardinalitaet;\r\nimport de.bkm.bes.basis.gueltigkeit.Zustand;\r\nimport de.bkm.bes.basis.gueltigkeit.exceptions.BesFachlicheGueltigkeitFehltException;\r\nimport de.bkm.bes.basis.gueltigkeit.exceptions.BesFreigegebeneGueltigkeitFehltException;\r\nimport de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextRelation;\r\nimport de.bkm.bes.basis.history.entity.BesEntitaetRuntimeException;\r\nimport de.bkm.bes.service.basis.gueltigkeit.BESSM_FachkontextRelationController;\r\nimport de.bkm.bes.vertriebssystem.vertriebsstruktur.BoVertriebsstelle;\r\nimport de.jdpe.bof.bo.eh.BoException;\r\nimport de.jdpe.bof.bo.pm.BoId;\r\nimport de.jdpe.bof.bo.pm.BoInterface;\r\nimport de.jdpe.bof.bo.pm.TaskServerControllerInterface;\r\nimport de.jdpe.bof.bo.tm.BotDate;\r\nimport de.jdpe.bof.bo.tm.BotPrecision;\r\n\r\n/**\r\n * Relationenklasse ${clientMultiplicity:var(java.jang.String)} - ${supplierMultiplicity:var(java.jang.String)}\r\n * zwischen den Klassen ${clientClassName:var(java.lang.String)}\r\n *   (RoleName ${ClientRoleName:var(java.lang.String)} / ${clientRoleName:var(java.lang.String)})\r\n * und ${supplierClassName:var(java.lang.String)}\r\n *   (RoleName ${SupplierRoleName:var(java.lang.String)} / ${supplierRoleName:var(java.lang.String)})\r\n * \u003cbr\u003e\r\n * @author ${user}\r\n * @version $$Id$$\r\n */\r\n@Persistence(true)\r\npublic class ${primary_type_name}\r\n  implements BoInterface,\r\n  BoIFachkontextRelation\u003c${clientClassName}, ${supplierClassName}, ${primary_type_name}_Gueltigkeit\u003e\r\n{\r\n  /**\r\n   * Beziehung zu den Gültigkeiten der Relation\r\n   * ${primary_type_name}_Gueltigkeit\r\n   */\r\n  @Indexing(IndexingType.INDEX)\r\n  private ValueHolderInterface gueltigkeiten \u003d new ValueHolder();\r\n\r\n  /**\r\n   * Beziehung zur Zielklasse der Relation (Target)\r\n   * ${supplierClassName}\r\n   */\r\n  @Indexing(IndexingType.INDEX)\r\n  private ValueHolderInterface target \u003d new ValueHolder();\r\n\r\n  /**\r\n   * Beziehung zur Quellklasse der Relation (Source)\r\n   * ${clientClassName}\r\n   */\r\n  @Indexing(IndexingType.INDEX)\r\n  private ValueHolderInterface source \u003d new ValueHolder();\r\n\r\n  /**\r\n   * Fachkontext der Relation für die Weitergabe an die assoziierten Entitäten\r\n   */\r\n  private transient Fachkontext fachkontext \u003d null;\r\n\r\n  /**\r\n   * aktuelle Gültigkeit der Relation\r\n   */\r\n  private transient ${primary_type_name}_Gueltigkeit gueltigkeit \u003d null;\r\n\r\n  /**\r\n   * Eindeutige BoId des Business Objects.\r\n   */\r\n  private transient BoId boId;\r\n\r\n  /**\r\n   * Object-Nummer der BoId des Business Objects.\r\n   * @see #boId\r\n   */\r\n  @Indexing(IndexingType.INDEX)\r\n  private long objectNr;\r\n\r\n  /**\r\n   * Server-Nummer der BoId des Business Objects.\r\n   * @see #boId\r\n   */\r\n  @Indexing(IndexingType.INDEX)\r\n  private long serverNr;\r\n\r\n  /**\r\n   * TaskServerController der die UnitOfWork hält.\r\n   */\r\n  private transient TaskServerControllerInterface taskServerControllerInterface;\r\n\r\n  /**\r\n   * TOPLink interne Version des Business Objects.\r\n   */\r\n  @Indexing(IndexingType.NO_INDEX)\r\n  private long version;\r\n\r\n  /**\r\n   * Standard-Konstruktor für die Klasse ${primary_type_name}\r\n   */\r\n  public ${primary_type_name}()\r\n  {\r\n    // keine Operation\r\n  }\r\n\r\n  /**\r\n   * Konstruktor mit BoId für die Klasse ${primary_type_name}\r\n   * @param aBoId BoId der Klasse\r\n   */\r\n  public ${primary_type_name}(\r\n    final BoId aBoId)\r\n  {\r\n    setBoId(aBoId);\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#beantrageAenderung()\r\n   */\r\n  @Override\r\n  public void beantrageAenderung()\r\n  {\r\n    getTaskServerControllerInterface()\r\n      .getBesModel(BESSM_FachkontextRelationController.class)\r\n      .beantrageAenderung(this);\r\n  }\r\n\r\n  /**\r\n   * Löscht das Business Object aus der Datenbank.\r\n   */\r\n  @Override\r\n  public void delete()\r\n  {\r\n    getTaskServerControllerInterface().deleteBo(this);\r\n  }\r\n\r\n  /**\r\n   * @see java.lang.Object#equals(java.lang.Object)\r\n   */\r\n  @Override\r\n  public boolean equals(final Object obj)\r\n  {\r\n    boolean result \u003d false;\r\n    if (this \u003d\u003d obj)\r\n    {\r\n      result \u003d true;\r\n    }\r\n    else if (obj instanceof ${primary_type_name})\r\n    {\r\n      result \u003d getBoId()\r\n        .equals(((${primary_type_name}) obj)\r\n          .getBoId());\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#erteileFreigabe(de.jdpe.bof.bo.tm.BotDate)\r\n   */\r\n  @Override\r\n  public void erteileFreigabe(final BotDate aFreigabe)\r\n  {\r\n    getTaskServerControllerInterface()\r\n      .getBesModel(BESSM_FachkontextRelationController.class)\r\n      .erteileFreigabe(this, aFreigabe);\r\n  }\r\n\r\n  /**\r\n   * Liefert die eindeutige BoId des Business Objects.\r\n   *\r\n   * @return eindeutige BoId des Business Objects\r\n   */\r\n  @Override\r\n  public BoId getBoId()\r\n  {\r\n    if (this.boId \u003d\u003d null)\r\n    {\r\n      this.boId \u003d new BoId(this.serverNr, this.objectNr, this.getRoleName());\r\n    }\r\n    return this.boId;\r\n  }\r\n\r\n  /**\r\n   * Liefert das Objekt, auf das sich die Relation gueltigkeiten bezieht.\r\n   *\r\n   * @return Objekt vom Typ ${primary_type_name}_Gueltigkeit,\r\n   * auf das die Relation gueltigkeiten verweist.\r\n   * @see #gueltigkeiten\r\n   */\r\n  public ${primary_type_name}_Gueltigkeit getGueltigkeiten()\r\n  {\r\n    ${primary_type_name}_Gueltigkeit obj \u003d (${primary_type_name}_Gueltigkeit) this.gueltigkeiten\r\n      .getValue();\r\n\r\n    if (obj !\u003d null)\r\n    {\r\n      obj.setTaskServerControllerInterface(getTaskServerControllerInterface());\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Gibt den ValueHolder, bei einer 1:? Relation, für TOPLink zurück.\r\n   *\r\n   * @return ValueHolder für das lazy-loading von TOPLink\r\n   * @see #gueltigkeiten\r\n   */\r\n  public final ValueHolderInterface getGueltigkeitenHolder()\r\n  {\r\n    ValueHolderInterface holder \u003d this.gueltigkeiten;\r\n\r\n    if (holder.isInstantiated())\r\n    {\r\n      BoInterface bo \u003d (BoInterface) holder.getValue();\r\n      if ((bo !\u003d null) \u0026\u0026 !bo.getBoId().isValid())\r\n      {\r\n        holder.setValue(null);\r\n      }\r\n    }\r\n    return holder;\r\n  }\r\n\r\n  /**\r\n   * Liefert die Object-Nummer des Business Objects.\r\n   *\r\n   * @return Object-Nummer als long\r\n   */\r\n  @Override\r\n  public long getObjectNr()\r\n  {\r\n    return this.objectNr;\r\n  }\r\n\r\n  /**\r\n   * Liefert den RoleName der Klasse.\r\n   *\r\n   * @return RoleName der Klasse\r\n   */\r\n  @Override\r\n  public String getRoleName()\r\n  {\r\n    return getClass().getName();\r\n  }\r\n\r\n  /**\r\n   * Liefert die Server-Nummer des Business Objects.\r\n   *\r\n   * @return Server-Nummer als long\r\n   */\r\n  @Override\r\n  public long getServerNr()\r\n  {\r\n    return this.serverNr;\r\n  }\r\n\r\n  /**\r\n   * Liefert das Objekt, auf das sich die Relation bezieht.\r\n   *\r\n   * @return Objekt vom Typ ${clientClassName},\r\n   * auf das die Relation verweist.\r\n   */\r\n  public ${clientClassName} getSource()\r\n  {\r\n    ${clientClassName} obj \u003d (${clientClassName}) this.source\r\n      .getValue();\r\n\r\n    if (obj !\u003d null)\r\n    {\r\n      obj.setTaskServerControllerInterface(getTaskServerControllerInterface());\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Gibt den ValueHolder, bei einer 1:n Relation, für TOPLink zurück.\r\n   *\r\n   * @return ValueHolder für das lazy-loading von TOPLink\r\n   */\r\n  public ValueHolderInterface getSourceHolder()\r\n  {\r\n    ValueHolderInterface holder \u003d this.source;\r\n\r\n    if (holder.isInstantiated())\r\n    {\r\n      BoInterface bo \u003d (BoInterface) holder.getValue();\r\n      if ((bo !\u003d null) \u0026\u0026 !bo.getBoId().isValid())\r\n      {\r\n        holder.setValue(null);\r\n      }\r\n    }\r\n    return holder;\r\n  }\r\n\r\n  /**\r\n   * Liefert das Objekt, auf das sich die Relation bezieht.\r\n   *\r\n   * @return Objekt vom Typ ${supplierClassName},\r\n   * auf das die Relation verweist.\r\n   */\r\n  public ${supplierClassName} getTarget()\r\n  {\r\n    ${supplierClassName} obj \u003d (${supplierClassName}) this.target.getValue();\r\n\r\n    if (obj !\u003d null)\r\n    {\r\n      obj.setTaskServerControllerInterface(getTaskServerControllerInterface());\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Gibt den ValueHolder, bei einer 1:n Relation, für TOPLink zurück.\r\n   *\r\n   * @return ValueHolder für das lazy-loading von TOPLink\r\n   */\r\n  public ValueHolderInterface getTargetHolder()\r\n  {\r\n    ValueHolderInterface holder \u003d this.target;\r\n\r\n    if (holder.isInstantiated())\r\n    {\r\n      BoInterface bo \u003d (BoInterface) holder.getValue();\r\n      if ((bo !\u003d null) \u0026\u0026 !bo.getBoId().isValid())\r\n      {\r\n        holder.setValue(null);\r\n      }\r\n    }\r\n    return holder;\r\n  }\r\n\r\n  /**\r\n   * Gibt das TaskServerControllerInterface zurück.\r\n   *\r\n   * @return TaskServerController\r\n   */\r\n  @Override\r\n  public TaskServerControllerInterface getTaskServerControllerInterface()\r\n  {\r\n    return this.taskServerControllerInterface;\r\n  }\r\n\r\n  /**\r\n   * Liefert die Versionsnummer des Business Objects.\r\n   *\r\n   * @return Versionsnummer als long\r\n   */\r\n  public long getVersion()\r\n  {\r\n    return this.version;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextPartizipant#gibFachkontext()\r\n   */\r\n  @Override\r\n  public Fachkontext gibFachkontext()\r\n  {\r\n    return this.fachkontext;\r\n  }\r\n\r\n  /**\r\n   * Liefert die aktuelle Gültigkeit der Relation.\r\n   *\r\n   * @return aktuelle Gültigkeit der Relation\r\n   */\r\n  protected ${primary_type_name}_Gueltigkeit gibGueltigkeit()\r\n  {\r\n    return this.gueltigkeit;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#gibGueltigkeiten()\r\n   */\r\n  @Override\r\n  public ${primary_type_name}_Gueltigkeit gibGueltigkeiten()\r\n  {\r\n    return getGueltigkeiten();\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextRelation#gibKardinalitaet()\r\n   */\r\n  @Override\r\n  final public Kardinalitaet gibKardinalitaet()\r\n  {\r\n    return Kardinalitaet.MANY_TO_ONE;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#gibKlasseGueltigkeit()\r\n   */\r\n  @Override\r\n  public Class\u003c? extends ${primary_type_name}_Gueltigkeit\u003e gibKlasseGueltigkeit()\r\n  {\r\n    return ${primary_type_name}_Gueltigkeit.class;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextRelation#gibQuelle()\r\n   */\r\n  @Override\r\n  public ${clientClassName} gibQuelle() throws BesFachlicheGueltigkeitFehltException\r\n  {\r\n    ${clientClassName} result \u003d null;\r\n\r\n    if ((result \u003d getSource()) !\u003d null)\r\n    {\r\n      if (!gibFachkontext().equals(result.gibFachkontext()))\r\n      {\r\n        result.initFachkontext(gibFachkontext());\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextRelation#gibZiel()\r\n   */\r\n  @Override\r\n  public ${supplierClassName} gibZiel()\r\n    throws BesFachlicheGueltigkeitFehltException\r\n  {\r\n    ${supplierClassName}  result \u003d null;\r\n\r\n    if ((result \u003d getTarget()) !\u003d null)\r\n    {\r\n      if (!gibFachkontext().equals(result.gibFachkontext()))\r\n      {\r\n        result.initFachkontext(gibFachkontext());\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Initialisierung des Objektes bei Erzeugung\r\n   */\r\n  @Override\r\n  public void init()\r\n  {\r\n    // keine Operation\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextRelation#init(de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextPartizipant, de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextPartizipant, de.jdpe.bof.bo.tm.BotDate)\r\n   */\r\n  @Override\r\n  public void init(final ${clientClassName}  aSource,\r\n    final ${supplierClassName}  aTarget, final BotDate aWirkungVon)\r\n  {\r\n    ${primary_type_name}_Gueltigkeit gueltigkeit;\r\n\r\n    if (aSource \u003d\u003d null)\r\n    {\r\n      //\r\n      // Fehler bei Parameterübergabe: Der Parameter \u0027\u0027{0}\u0027\u0027 wurde nicht\r\n      // angegeben (Wert: \u003cnull\u003e).\r\n      //\r\n      throw new BesUngueltigerParameterException(\r\n        BesUngueltigerParameterException.ERR_PARAMETER_UNGUELTIG_NULL,\r\n        \"aSource\");\r\n    }\r\n\r\n    if (aTarget \u003d\u003d null)\r\n    {\r\n      //\r\n      // Fehler bei Parameterübergabe: Der Parameter \u0027\u0027{0}\u0027\u0027 wurde nicht\r\n      // angegeben (Wert: \u003cnull\u003e).\r\n      //\r\n      throw new BesUngueltigerParameterException(\r\n        BesUngueltigerParameterException.ERR_PARAMETER_UNGUELTIG_NULL,\r\n        \"aTarget\");\r\n    }\r\n\r\n    if (aWirkungVon \u003d\u003d null)\r\n    {\r\n      //\r\n      // Fehler bei Parameterübergabe: Der Parameter \u0027\u0027{0}\u0027\u0027 wurde nicht\r\n      // angegeben (Wert: \u003cnull\u003e).\r\n      //\r\n      throw new BesUngueltigerParameterException(\r\n        BesUngueltigerParameterException.ERR_PARAMETER_UNGUELTIG_NULL,\r\n        \"aWirkungVon\");\r\n    }\r\n\r\n    if (aWirkungVon.precision() !\u003d BotPrecision.TAG)\r\n    {\r\n      //\r\n      // Fehler bei Parameterübergabe: Das Datum \u0027\u0027{0}\u0027\u0027 hat nicht die\r\n      // Genauigkeit \u0027\u0027{1}\u0027\u0027.\r\n      //\r\n      throw new BesUngueltigerParameterException(\r\n        BesUngueltigerParameterException.ERR_DATUMGENAUIGKEIT_UNGUELTIG,\r\n        new String[] { \"aWirkungVon\", BotPrecision.TAG.toString() });\r\n    }\r\n\r\n    if (gibFachkontext() \u003d\u003d null)\r\n    {\r\n      //\r\n      // Fehler bei der Überprüfung des Objekts mit der BoId {0}. Das Attribut\r\n      // {1} ist nicht gesetzt.\r\n      //\r\n      throw new BesGEDRuntimeException(\r\n        BesGEDRuntimeException.ERR_PFLICHTATTRIBUT_FEHLT,\r\n        new String[] { String.valueOf(getBoId()), \"Fachkontext\" });\r\n    }\r\n\r\n    if (!gibFachkontext().gibZustand().equals(Zustand.AENDERBARE_GUELTIGKEIT))\r\n    {\r\n      //\r\n      // Fehler bei der Überprüfung des Objekts mit der BoId {0}: Das Attribut\r\n      // \u0027\u0027{1}\u0027\u0027 ist mit einem ungültigen Wert belegt (Wert {2}).\r\n      //\r\n      throw new BesGEDRuntimeException(\r\n        BesGEDRuntimeException.ERR_PFLICHTATTRIBUT_UNGUELTIG,\r\n        new String[] { String.valueOf(getBoId()), \"Fachkontext\",\r\n          gibFachkontext().toString() });\r\n    }\r\n\r\n    if ((gueltigkeit \u003d gibGueltigkeiten()).gibFreigabe() !\u003d null)\r\n    {\r\n      //\r\n      // Initialisierung der Entität mit der BoId \\\"{0}\\\" ist bereits erfolgt!\r\n      //\r\n      throw new BesEntitaetRuntimeException(\r\n        BesEntitaetRuntimeException.ERR_INITIALISIERUNG_ERZEUGUNG_BEREITS_ERFOLGT,\r\n        String.valueOf(getBoId()));\r\n    }\r\n\r\n    if (gueltigkeit.gibVorgaenger() !\u003d null)\r\n    {\r\n      //\r\n      // Initialisierung der Entität mit der BoId \\\"{0}\\\" ist bereits erfolgt!\r\n      //\r\n      throw new BesEntitaetRuntimeException(\r\n        BesEntitaetRuntimeException.ERR_INITIALISIERUNG_ERZEUGUNG_BEREITS_ERFOLGT,\r\n        String.valueOf(getBoId()));\r\n    }\r\n\r\n    if ((getSource() !\u003d null) || (getTarget() !\u003d null))\r\n    {\r\n      //\r\n      // Initialisierung der Entität mit der BoId \\\"{0}\\\" ist bereits erfolgt!\r\n      //\r\n      throw new BesEntitaetRuntimeException(\r\n        BesEntitaetRuntimeException.ERR_INITIALISIERUNG_ERZEUGUNG_BEREITS_ERFOLGT,\r\n        String.valueOf(getBoId()));\r\n    }\r\n\r\n    setSource(aSource);\r\n    setTarget(aTarget);\r\n    setzeWirkungVon(aWirkungVon);\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#initErzeugungszustand()\r\n   */\r\n  @Override\r\n  public ${primary_type_name}_Gueltigkeit initErzeugungszustand()\r\n  {\r\n    ${primary_type_name}_Gueltigkeit result;\r\n\r\n    if (getGueltigkeiten() !\u003d null)\r\n    {\r\n      //\r\n      // Initialisierung der Entität mit der BoId \\\"{0}\\\" ist bereits erfolgt!\r\n      //\r\n      throw new BesEntitaetRuntimeException(\r\n        BesEntitaetRuntimeException.ERR_INITIALISIERUNG_ERZEUGUNG_BEREITS_ERFOLGT,\r\n        String.valueOf(getBoId()));\r\n    }\r\n\r\n    result \u003d getBoId().isTransient()\r\n      ? getTaskServerControllerInterface()\r\n        .getNewTransientBo(gibKlasseGueltigkeit())\r\n      : getTaskServerControllerInterface().getNewBo(gibKlasseGueltigkeit());\r\n    setGueltigkeiten(result);\r\n\r\n    if (gibFachkontext() \u003d\u003d null)\r\n    {\r\n      //\r\n      // Initialisierung bei Erzeugung der Entität hier vornehmen\r\n      //\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextPartizipant#initFachkontext(de.bkm.bes.basis.gueltigkeit.Fachkontext)\r\n   */\r\n  @Override\r\n  public void initFachkontext(final Fachkontext aFachkontext)\r\n    throws BesFachlicheGueltigkeitFehltException\r\n  {\r\n    this.gueltigkeit \u003d getTaskServerControllerInterface()\r\n      .getBesModel(BESSM_FachkontextRelationController.class)\r\n      .initFachkontext(this, aFachkontext);\r\n    this.fachkontext \u003d aFachkontext;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#loescheBeantragung()\r\n   */\r\n  @Override\r\n  public void loescheBeantragung()\r\n  {\r\n    getTaskServerControllerInterface()\r\n      .getBesModel(BESSM_FachkontextRelationController.class)\r\n      .loescheBeantragung(this);\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#loescheEntitaet()\r\n   */\r\n  @Override\r\n  public void loescheEntitaet()\r\n  {\r\n    getTaskServerControllerInterface()\r\n      .getBesModel(BESSM_FachkontextRelationController.class)\r\n      .loescheEntitaet(this);\r\n\r\n    this.gueltigkeit \u003d null;\r\n    this.fachkontext \u003d null;\r\n\r\n    setSource(null);\r\n    setTarget(null);\r\n  }\r\n\r\n  /**\r\n   * Mit Hilfe dieser Methode setzt der Konstruktor die BoId.\r\n   *\r\n   * @param aBoId BoId für das Objekt\r\n   */\r\n  protected final void setBoId(final BoId aBoId)\r\n  {\r\n    if (!aBoId.getRoleName().equals(this.getRoleName()))\r\n    {\r\n      throw new BoException(\"Rolename mismatch: \" + this.getRoleName() + \" !\u003d \"\r\n        + aBoId.getRoleName());\r\n    }\r\n    this.serverNr \u003d aBoId.getServerNr();\r\n    this.objectNr \u003d aBoId.getObjectNr();\r\n    this.boId \u003d aBoId;\r\n  }\r\n\r\n  /**\r\n   * Legt fest auf welches Objekt sich die Relation gueltigkeiten bezieht.\r\n   *\r\n   * @param aObj Das Objekt, vom Typ ${primary_type_name}_Gueltigkeit,\r\n   * zu dem eine Relation gueltigkeiten erzeugt werden soll.\r\n   * @see #gueltigkeiten\r\n   */\r\n  public void setGueltigkeiten(\r\n    final ${primary_type_name}_Gueltigkeit aObj)\r\n  {\r\n    this.gueltigkeiten.setValue(aObj);\r\n  }\r\n\r\n  /**\r\n   * Setzt den ValueHolder, bei einer \"1-zu\" Relation, für TOPLink.\r\n   *\r\n   * @param aValueHolder ValueHolder für das lazy-loading von TOPLink\r\n   * @see #gueltigkeiten\r\n   */\r\n  public final void setGueltigkeitenHolder(\r\n    final ValueHolderInterface aValueHolder)\r\n  {\r\n    this.gueltigkeiten \u003d aValueHolder;\r\n  }\r\n\r\n  /**\r\n   * Setzt die Server-Nummer des BusinessObjects.\r\n   * \u003cb\u003eDiese Methode wird von TopLink benötigt, sie darf nicht benutzt werden!\u003c/b\u003e\r\n   *\r\n   * @param aObjectNr Object-Nummer des BusinessObjects\r\n   */\r\n  public void setObjectNr(final long aObjectNr)\r\n  {\r\n    this.objectNr \u003d aObjectNr;\r\n  }\r\n\r\n  /**\r\n   * Setzt die Server-Nummer des BusinessObjects.\r\n   * \u003cb\u003eDiese Methode wird von TopLink benötigt, sie darf nicht benutzt werden!\u003c/b\u003e\r\n   *\r\n   * @param aServerNr Server-Nummer des BusinessObjects\r\n   */\r\n  public void setServerNr(final long aServerNr)\r\n  {\r\n    this.serverNr \u003d aServerNr;\r\n  }\r\n\r\n  /**\r\n   * Legt fest auf welches Objekt sich die Relation bezieht.\r\n   *\r\n   * @param obj Das Objekt, vom Typ ${clientClassName},\r\n   * zu dem eine Relation erzeugt werden soll.\r\n   */\r\n  public void setSource(final ${clientClassName} obj)\r\n  {\r\n    // TOPLink ONE_TO_MANY: Wenn Attribut auf der Gegenseite navigierbar ist.\r\n    if (obj \u003d\u003d null)\r\n    {\r\n      // Referenz ist null -\u003e Entfernen auf der Gegenseite\r\n      if (getSource() !\u003d null)\r\n      {\r\n        //\r\n        //Beziehung auf der Gegenseite (am ${clientClassName}) zu dieser Klasse (${primary_type_name})\r\n        //mit Hilfe der remove...OneWay-Methode entfernen\r\n        //\r\n        getSource().removeRelation${SupplierRoleName}OneWay(this);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      // Referenz ist nicht null...\r\n\r\n      // Ist bereits ein Objekte zugordnet?\r\n      if (getSource() !\u003d null)\r\n      {\r\n        // Wenn das gleiche Objekt nochmal gesetzt werden soll,...\r\n        if (obj.getBoId().equals(getSource().getBoId()))\r\n        {\r\n          // ...passiert nichts.\r\n          return;\r\n        }\r\n        else\r\n        {\r\n          //\r\n          //Beziehung auf der Gegenseite (am ${clientClassName}) zu dieser Klasse (${primary_type_name})\r\n          //mit Hilfe der remove...OneWay-Methode entfernen\r\n          //\r\n          getSource().removeRelation${SupplierRoleName}OneWay(this);\r\n        }\r\n      }\r\n      //\r\n      //Beziehung auf der Gegenseite (am ${clientClassName}) zu dieser Klasse (${primary_type_name})\r\n      //mit Hilfe der add...OneWay-Methode hinzufügen\r\n      //\r\n      obj.addRelation${SupplierRoleName}OneWay(this);\r\n    }\r\n    this.source.setValue(obj);\r\n  }\r\n\r\n  /**\r\n   * Setzt den ValueHolder, bei einer \"1-zu\" Relation, für TOPLink.\r\n   *\r\n   * @param valueHolder ValueHolder für das lazy-loading von TOPLink\r\n   */\r\n  public void setSourceHolder(final ValueHolderInterface valueHolder)\r\n  {\r\n    this.source \u003d valueHolder;\r\n  }\r\n\r\n  /**\r\n   * TOPLink ONE_TO_MANY: Wenn Attribut auf der Gegenseite navigierbar ist.\r\n   *\r\n   * @param obj  ${clientClassName}-Objekt für das eine Relation\r\n   * hergestellt werden soll\r\n   */\r\n  public void setSourceOneWay(\r\n    final  ${clientClassName} obj)\r\n  {\r\n    // Falls es schon eine Referezen gibt, muß diese erst entfernt werden.\r\n    if (getSource() !\u003d null)\r\n    {\r\n      //\r\n      //Beziehung auf der Gegenseite (am  ${clientClassName}) zu dieser Klasse (${primary_type_name})\r\n      //mit Hilfe der remove...OneWay-Methode entfernen\r\n      //\r\n      getSource().removeRelation${SupplierRoleName}OneWay(this);\r\n    }\r\n\r\n    this.source.setValue(obj);\r\n  }\r\n\r\n  /**\r\n   * Legt fest auf welches Objekt sich die Relation bezieht.\r\n   *\r\n   * @param obj Das Objekt, vom Typ ${supplierClassName},\r\n   * zu dem eine Relation erzeugt werden soll.\r\n   */\r\n  public void setTarget(final ${supplierClassName} obj)\r\n  {\r\n    // TOPLink ONE_TO_MANY: Wenn Attribut auf der Gegenseite navigierbar ist.\r\n    if (obj \u003d\u003d null)\r\n    {\r\n      // Referenz ist null -\u003e Entfernen auf der Gegenseite\r\n      if (getTarget() !\u003d null)\r\n      {\r\n        //\r\n        //Beziehung auf der Gegenseite (am ${supplierClassName}) zu dieser Klasse (${primary_type_name})\r\n        //mit Hilfe der remove...OneWay-Methode entfernen\r\n        //\r\n        getTarget().removeRelation${ClientRoleName}OneWay(this);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      // Referenz ist nicht null...\r\n\r\n      // Ist bereits ein Objekte zugordnet?\r\n      if (getTarget() !\u003d null)\r\n      {\r\n        // Wenn das gleiche Objekt nochmal gesetzt werden soll,...\r\n        if (obj.getBoId().equals(getTarget().getBoId()))\r\n        {\r\n          // ...passiert nichts.\r\n          return;\r\n        }\r\n        else\r\n        {\r\n          //\r\n          //Beziehung auf der Gegenseite (am ${supplierClassName}) zu dieser Klasse (${primary_type_name})\r\n          //mit Hilfe der remove...OneWay-Methode entfernen\r\n          //\r\n          getTarget().removeRelation${ClientRoleName}OneWay(this);\r\n        }\r\n      }\r\n      //\r\n      //Beziehung auf der Gegenseite (am ${supplierClassName}) zu dieser Klasse (${primary_type_name})\r\n      //mit Hilfe der add...OneWay-Methode hinzufügen\r\n      //\r\n      obj.addRelation${ClientRoleName}OneWay(this);\r\n    }\r\n    this.target.setValue(obj);\r\n  }\r\n\r\n  /**\r\n   * Setzt den ValueHolder, bei einer \"1-zu\" Relation, für TOPLink.\r\n   *\r\n   * @param valueHolder ValueHolder für das lazy-loading von TOPLink\r\n   */\r\n  public void setTargetHolder(final ValueHolderInterface valueHolder)\r\n  {\r\n    this.target \u003d valueHolder;\r\n  }\r\n\r\n  /**\r\n   * TOPLink ONE_TO_MANY: Wenn Attribut auf der Gegenseite navigierbar ist.\r\n   *\r\n   * @param obj ${supplierClassName}-Objekt für das eine Relation\r\n   * hergestellt werden soll\r\n   */\r\n  public void setTargetOneWay(\r\n    final ${supplierClassName} obj)\r\n  {\r\n    // Falls es schon eine Referezen gibt, muß diese erst entfernt werden.\r\n    if (getTarget() !\u003d null)\r\n    {\r\n      //\r\n      //Beziehung auf der Gegenseite (am ${supplierClassName}) zu dieser Klasse (${primary_type_name})\r\n      //mit Hilfe der remove...OneWay-Methode entfernen\r\n      //\r\n      getTarget().removeRelation${ClientRoleName}OneWay(this);\r\n    }\r\n\r\n    this.target.setValue(obj);\r\n  }\r\n\r\n  /**\r\n   * Setzt den TaskServerController.\r\n   *\r\n   * @param aTsc TaskServerController der die UnitOfWork hält.\r\n   */\r\n  @Override\r\n  public void setTaskServerControllerInterface(\r\n    final TaskServerControllerInterface aTsc)\r\n  {\r\n    this.taskServerControllerInterface \u003d aTsc;\r\n  }\r\n\r\n  /**\r\n   * Setzt die Versionsnummer des BusinessObjects.\r\n   * \u003cb\u003eDiese Methode wird von TopLink benötigt, sie darf nicht benutzt werden!\u003c/b\u003e\r\n   *\r\n   * @param aVersionNr Versionsnummer des BusinessObjects\r\n   */\r\n  public void setVersion(final long aVersionNr)\r\n  {\r\n    this.version \u003d aVersionNr;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#setzeGueltigkeiten(de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextGueltigkeit)\r\n   */\r\n  @Override\r\n  public void setzeGueltigkeiten(\r\n    final ${primary_type_name}_Gueltigkeit aGueltigkeiten)\r\n  {\r\n    setGueltigkeiten(aGueltigkeiten);\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#setzeWirkungVon(de.jdpe.bof.bo.tm.BotDate)\r\n   */\r\n  @Override\r\n  public void setzeWirkungVon(final BotDate aWirkungVon)\r\n  {\r\n    getTaskServerControllerInterface()\r\n      .getBesModel(BESSM_FachkontextRelationController.class)\r\n      .setzeWirkungVon(this, aWirkungVon);\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#storniereVormerkung()\r\n   */\r\n  @Override\r\n  public void storniereVormerkung()\r\n    throws BesFreigegebeneGueltigkeitFehltException\r\n  {\r\n    getTaskServerControllerInterface()\r\n      .getBesModel(BESSM_FachkontextRelationController.class)\r\n      .storniereVormerkung(this);\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#terminiere(de.jdpe.bof.bo.tm.BotDate)\r\n   */\r\n  @Override\r\n  public void terminiere(final BotDate aWirkungBis)\r\n  {\r\n    getTaskServerControllerInterface()\r\n      .getBesModel(BESSM_FachkontextRelationController.class)\r\n      .terminiere(this, aWirkungBis);\r\n  }\r\n}\r\n\r\n/*\r\n * $$Log$$\r\n */",
  "location": "FILE",
  "filenameRestrictions": [],
  "dependencies": []
}