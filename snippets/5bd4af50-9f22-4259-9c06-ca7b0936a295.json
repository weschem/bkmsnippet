{
  "uuid": "5bd4af50-9f22-4259-9c06-ca7b0936a295",
  "name": "Fachkontext Entitaet",
  "description": "erzeugt die notwendigen Attribute und Methoden um ein Business Object mit Fachkontext Gültigkeit auszustatten",
  "extraSearchTerms": [
    "Fachkontext",
    "Gültigkeit"
  ],
  "tags": [
    "ged",
    "realtion"
  ],
  "code": "${:import(de.jdpe.bof.bo.tm.BotContext, org.eclipse.persistence.indirection.ValueHolder, org.eclipse.persistence.indirection.ValueHolderInterface, de.bkm.bes.basis.history.entity.BesEntitaetRuntimeException, de.bkm.bes.basis.history.entity.BoIEntitaetenstatus, de.bkm.bes.basis.history.entity.BoIStatusfaehigeEntitaet, de.bkm.bes.service.basis.history.entity.BESSM_EntitaetenController)}\r\n\r\n  /**\r\n   * aktuelle Gültigkeit vom Typ\r\n   * Bo${statusClassName:var(java.lang.String)}Gueltigkeit \r\n   */\r\n  private transient Bo${statusClassName}Gueltigkeit gueltigkeit \u003d null;\r\n\r\n  /**\r\n   *  TOPLink ValueHolder für lazy-loading zum abbilden der \"1-zu\"\r\n   * Relation zu Bo${statusClassName}Gueltigkeit statusliste.\r\n   */\r\n  @Indexing(IndexingType.INDEX)\r\n  private ValueHolderInterface gueltigkeiten \u003d new ValueHolder();\r\n\r\n  /**\r\n   * aktueller Fachkontext der Entität\r\n   */\r\n  private transient Fachkontext fachkontext \u003d null;\r\n  \r\n /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#beantrageAenderung()\r\n   */\r\n  @Override\r\n  public void beantrageAenderung()\r\n  {\r\n    getTaskServerControllerInterface()\r\n      .getBesModel(BESSM_FachkontextEntitaetController.class)\r\n      .beantrageAenderung(this);\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#erteileFreigabe(de.jdpe.bof.bo.tm.BotDate)\r\n   */\r\n  @Override\r\n  public void erteileFreigabe(final BotDate aFreigabe)\r\n  {\r\n    getTaskServerControllerInterface()\r\n      .getBesModel(BESSM_FachkontextEntitaetController.class)\r\n      .erteileFreigabe(this, aFreigabe);\r\n  }\r\n\r\n  /**\r\n   * Liefert das Objekt, auf das sich die Relation gueltigkeiten bezieht.\r\n   *\r\n   * @return Objekt vom Typ Bo${statusClassName}Gueltigkeit,\r\n   *         auf das die Relation gueltigkeiten verweist.\r\n   * @see #gueltigkeiten\r\n   */\r\n  public Bo${statusClassName}Gueltigkeit getGueltigkeiten()\r\n  {\r\n    Bo${statusClassName}Gueltigkeit obj \u003d (Bo${statusClassName}Gueltigkeit) this.gueltigkeiten.getValue();\r\n\r\n    if (obj !\u003d null)\r\n    {\r\n      obj.setTaskServerControllerInterface(getTaskServerControllerInterface());\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Gibt den ValueHolder, bei einer 1:? Relation, für TOPLink zurück.\r\n   *\r\n   * @return ValueHolder für das lazy-loading von TOPLink\r\n   * @see #gueltigkeiten\r\n   */\r\n  public final ValueHolderInterface getGueltigkeitenHolder()\r\n  {\r\n    ValueHolderInterface holder \u003d this.gueltigkeiten;\r\n\r\n    if (holder.isInstantiated())\r\n    {\r\n      BoInterface bo \u003d (BoInterface) holder.getValue();\r\n      if ((bo !\u003d null) \u0026\u0026 !bo.getBoId().isValid())\r\n      {\r\n        holder.setValue(null);\r\n      }\r\n    }\r\n    return holder;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextPartizipant#gibFachkontext()\r\n   */\r\n  @Override\r\n  public Fachkontext gibFachkontext()\r\n  {\r\n    return this.fachkontext;\r\n  }\r\n\r\n  /**\r\n   * Liefert die aktuelle Gültigkeit der Relation.\r\n   *\r\n   * @return aktuelle Gültigkeit der Entität\r\n   */\r\n  protected Bo${statusClassName}Gueltigkeit gibGueltigkeit()\r\n  {\r\n    return this.gueltigkeit;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#gibGueltigkeiten()\r\n   */\r\n  @Override\r\n  public Bo${statusClassName}Gueltigkeit gibGueltigkeiten()\r\n  {\r\n    return getGueltigkeiten();\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#gibKlasseGueltigkeit()\r\n   */\r\n  @Override\r\n  public Class\u003cBo${statusClassName}Gueltigkeit\u003e gibKlasseGueltigkeit()\r\n  {\r\n    return Bo${statusClassName}Gueltigkeit.class;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#initErzeugungszustand()\r\n   */\r\n  @Override\r\n  public Bo${statusClassName}Gueltigkeit initErzeugungszustand()\r\n  {\r\n    Bo${statusClassName}Gueltigkeit result;\r\n\r\n    //  if (gibFachkontext() !\u003d null)\r\n    //  {\r\n    //    //\r\n    //    // Initialisierung der Entität mit der BoId \\\"{0}\\\" ist bereits erfolgt!\r\n    //    //\r\n    //    throw new BesEntitaetRuntimeException(\r\n    //      BesEntitaetRuntimeException.ERR_INITIALISIERUNG_ERZEUGUNG_BEREITS_ERFOLGT,\r\n    //      String.valueOf(getBoId()));\r\n    //  }\r\n\r\n    if (getGueltigkeiten() !\u003d null)\r\n    {\r\n      //\r\n      // Initialisierung der Entität mit der BoId \\\"{0}\\\" ist bereits erfolgt!\r\n      //\r\n      throw new BesEntitaetRuntimeException(\r\n        BesEntitaetRuntimeException.ERR_INITIALISIERUNG_ERZEUGUNG_BEREITS_ERFOLGT,\r\n        String.valueOf(getBoId()));\r\n    }\r\n\r\n    result \u003d getBoId().isTransient()\r\n      ? getTaskServerControllerInterface()\r\n        .getNewTransientBo(gibKlasseGueltigkeit())\r\n      : getTaskServerControllerInterface().getNewBo(gibKlasseGueltigkeit());\r\n    setGueltigkeiten(result);\r\n\r\n    if (gibFachkontext() \u003d\u003d null)\r\n    {\r\n      //\r\n      // Initialisierung bei Erzeugung der Entität hier vornehmen\r\n      //\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextPartizipant#initFachkontext(de.bkm.bes.basis.gueltigkeit.Fachkontext)\r\n   */\r\n  @Override\r\n  public void initFachkontext(final Fachkontext aFachkontext)\r\n    throws BesFachlicheGueltigkeitFehltException\r\n  {\r\n    this.gueltigkeit \u003d getTaskServerControllerInterface()\r\n      .getBesModel(BESSM_FachkontextEntitaetController.class)\r\n      .initFachkontext(this, aFachkontext);\r\n    this.fachkontext \u003d aFachkontext;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#loescheBeantragung()\r\n   */\r\n  @Override\r\n  public void loescheBeantragung()\r\n  {\r\n    getTaskServerControllerInterface()\r\n      .getBesModel(BESSM_FachkontextEntitaetController.class)\r\n      .loescheBeantragung(this);\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#loescheEntitaet()\r\n   */\r\n  @Override\r\n  public void loescheEntitaet()\r\n  {\r\n    getTaskServerControllerInterface()\r\n      .getBesModel(BESSM_FachkontextEntitaetController.class)\r\n      .loescheEntitaet(this);\r\n    this.gueltigkeit \u003d null;\r\n    this.fachkontext \u003d null;\r\n\r\n    // abhängige Entitäten löschen\r\n  }\r\n\r\n  /**\r\n   * Legt fest auf welches Objekt sich die Relation gueltigkeiten bezieht.\r\n   *\r\n   * @param aObj Das Objekt, vom Typ Bo${statusClassName}Gueltigkeit,\r\n   *            zu dem eine Relation gueltigkeiten erzeugt werden soll.\r\n   * @see #gueltigkeiten\r\n   */\r\n  public void setGueltigkeiten(\r\n    final Bo${statusClassName}Gueltigkeit aObj)\r\n  {\r\n    this.gueltigkeiten.setValue(aObj);\r\n  }\r\n\r\n  /**\r\n   * Setzt den ValueHolder, bei einer \"1-zu\" Relation, für TOPLink.\r\n   *\r\n   * @param aValueHolder ValueHolder für das lazy-loading von TOPLink\r\n   * @see #gueltigkeiten\r\n   */\r\n  public final void setGueltigkeitenHolder(\r\n    final ValueHolderInterface aValueHolder)\r\n  {\r\n    this.gueltigkeiten \u003d aValueHolder;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#setzeGueltigkeiten(de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextGueltigkeit)\r\n   */\r\n  @Override\r\n  public void setzeGueltigkeiten(final Bo${statusClassName}Gueltigkeit aGueltigkeiten)\r\n  {\r\n    setGueltigkeiten(aGueltigkeiten);\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#setzeWirkungVon(de.jdpe.bof.bo.tm.BotDate)\r\n   */\r\n  @Override\r\n  public void setzeWirkungVon(final BotDate aWirkungVon)\r\n  {\r\n    getTaskServerControllerInterface()\r\n      .getBesModel(BESSM_FachkontextEntitaetController.class)\r\n      .setzeWirkungVon(this, aWirkungVon);\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#storniereVormerkung()\r\n   */\r\n  @Override\r\n  public void storniereVormerkung()\r\n    throws BesFreigegebeneGueltigkeitFehltException\r\n  {\r\n    getTaskServerControllerInterface()\r\n      .getBesModel(BESSM_FachkontextEntitaetController.class)\r\n      .storniereVormerkung(this);\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.basis.gueltigkeit.schnittstellen.BoIFachkontextVerwender#terminiere(de.jdpe.bof.bo.tm.BotDate)\r\n   */\r\n  @Override\r\n  public void terminiere(final BotDate aWirkungBis)\r\n  {\r\n    getTaskServerControllerInterface()\r\n      .getBesModel(BESSM_FachkontextEntitaetController.class)\r\n      .terminiere(this, aWirkungBis);\r\n  }",
  "location": "JAVA",
  "filenameRestrictions": [],
  "dependencies": []
}