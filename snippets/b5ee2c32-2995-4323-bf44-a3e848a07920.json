{
  "uuid": "b5ee2c32-2995-4323-bf44-a3e848a07920",
  "name": "Fassade",
  "description": "leget eine neue Klasse für eine Fassade an",
  "extraSearchTerms": [
    "Fassade"
  ],
  "tags": [
    "dienste",
    "newClass"
  ],
  "code": "package ${enclosing_package};\r\n\r\n/* \r\n * Projekt JoKer - Java basiertes, objektorientiertes Kernprojekt \r\n * (c)opyright ${year} Bausparkasse Mainz AG \r\n */\r\nimport de.bkm.bes.basis.annotation.Indexing;\r\nimport de.bkm.bes.basis.annotation.IndexingType;\r\nimport de.bkm.bes.basis.annotation.Persistence;\r\nimport de.bkm.bes.fassaden.exceptions.BesFassadeSchonInitialisiertRuntimeException;\r\nimport de.bkm.bes.fassaden.interfaces.BoIEntitaetenfassade;\r\nimport de.jdpe.bof.bo.eh.BoException;\r\nimport de.jdpe.bof.bo.pm.BoId;\r\nimport de.jdpe.bof.bo.pm.BoInterface;\r\nimport de.jdpe.bof.bo.pm.TaskServerControllerInterface;\r\nimport de.jdpe.bof.bo.tm.BotContext;\r\nimport de.bkm.bes.basis.fassade.BoIFassadenfaehig;\r\nimport de.bkm.bes.basis.history.entity.BoIKontextfaehig;\r\n\r\n/**\r\n * Fassade ${primary_type_name}\r\n * des Business Object ${businessObjectName:var(java.lang.String)}\r\n * und dem zugehörigen Handle ${businessObjectHandleName:var(java.lang.String)}\r\n * \u003cbr\u003e\r\n * @author ${user}\r\n * @version $$Id$$\r\n */\r\n@Persistence(false)\r\npublic class ${primary_type_name} implements BoIEntitaetenfassade\r\n{\r\n  /**\r\n   * Eindeutige BoId des Business Objects.\r\n   */\r\n  private transient BoId boId;\r\n\r\n  /**\r\n   * BusinessObject, das sich hinter der Fassade verbirgt\r\n   */\r\n  private transient ${businessObjectName} businessObject \u003d null;\r\n\r\n  /**\r\n   * Object-Nummer der BoId des Business Objects.\r\n   */\r\n  private long objectNr;\r\n\r\n  /**\r\n   * Server-Nummer der BoId des Business Objects.\r\n   */\r\n  private long serverNr;\r\n\r\n  /**\r\n   * TaskServerController der die UnitOfWork hält.\r\n   */\r\n  private transient TaskServerControllerInterface taskServerControllerInterface;\r\n\r\n  /**\r\n   * TOPLink interne Version des Business Objects.\r\n   */\r\n  private long version;\r\n\r\n  /**\r\n   * Erzeugt eine Fassade für das übergebene Handle. \r\n   * \r\n   * @param aHandle Handle des Bos der Fassade\r\n   * @return ${primary_type_name}\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED) \r\n  public static ${primary_type_name} erzeugeFassade(final ${businessObjectHandleName} aHandle)\r\n  {\r\n    return (${primary_type_name}) FassadenFactory.erzeugeFassade(aHandle, ${primary_type_name}.class);\r\n  }\r\n  \r\n  /**\r\n   * Erzeugt eine Fassade ${primary_type_name}.\u003cbr/\u003e\r\n   * \u003cbr/\u003e\r\n   * @param aBoId für den eine Fassade erstellt werden soll.\r\n   * @param aTsc\r\n   * @return Neue Fassade ${primary_type_name}.\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public static ${primary_type_name} erzeugeFassade(final BoId aBoId,\r\n    final TaskServerControllerInterface aTsc)\r\n  {\r\n    return FassadenFactory.erzeugeFassade(aTsc.readBo(aBoId, ${businessObjectName}.class),\r\n      ${primary_type_name}.class);\r\n  }\r\n\r\n  /**\r\n   * Erzeugt eine Fassade ${primary_type_name} im gewünschten Zustand.\u003cbr/\u003e\r\n   * \u003cbr/\u003e\r\n   * @param aBoId für den eine Fassade erstellt werden soll.\r\n   * @param aTsc\r\n   * @param aKontext Kontext, mit dem ${primary_type_name} initialisiert werden soll.\r\n   * @return Neue Fassade ${primary_type_name}.\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public static ${primary_type_name} erzeugeFassade(final BoId aBoId,\r\n    final TaskServerControllerInterface aTsc, final BotContext aKontext)\r\n  {\r\n    return FassadenFactory.erzeugeFassade(aTsc.readBo(aBoId, ${businessObjectName}.class),\r\n      aKontext, ${primary_type_name}.class);\r\n  }\r\n\r\n  /**\r\n   * Aktualisiert die Fassade, indem das BusinessObject hinter der Fassade\r\n   * neu gelesen wird. Sollte es sich um eine kontextfähige Entität handeln,\r\n   * so wird diese erneut mit dem ursprünglich gesetzten Kontext initialisiert.\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED) \r\n  public void refreshFassade()\r\n  {\r\n    ${businessObjectName} entitaet \u003d this.businessObject;\r\n    BotContext kontext \u003d null;\r\n\r\n    if (entitaet instanceof BoIKontextfaehig)\r\n    {\r\n      kontext \u003d ((BoIKontextfaehig) entitaet).gibKontext();\r\n    }\r\n\r\n    entitaet \u003d entitaet.getTaskServerControllerInterface()\r\n      .readBo(gibEntitaetsBoId(), ${businessObjectName}.class);\r\n\r\n    if (entitaet instanceof BoIKontextfaehig)\r\n    {\r\n      ((BoIKontextfaehig) entitaet).initKontext(kontext);\r\n    }\r\n    \r\n    this.businessObject \u003d entitaet;\r\n  }\r\n\r\n  /**\r\n   * Standardkonstruktor der Klasse ${primary_type_name}.\r\n   */\r\n  public ${primary_type_name}()\r\n  {\r\n    //Nothing\r\n  }\r\n\r\n  /**\r\n   * Konstruktor mit BoId für die Klasse ${primary_type_name}\r\n   * @param aBoId BoId der Klasse\r\n   */\r\n  public ${primary_type_name}(final BoId aBoId)\r\n  {\r\n    setBoId(aBoId);\r\n  }\r\n\r\n  /**\r\n   * Löscht das Business Object aus der Datenbank.\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public void delete()\r\n  {\r\n    getTaskServerControllerInterface().deleteBo(this);\r\n  }\r\n\r\n  /**\r\n   * Vergleicht die BoIds der persistenten Entitäten.\r\n   *\r\n   * @see java.lang.Object#equals(java.lang.Object)\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public boolean equals(final Object obj)\r\n  {\r\n    boolean result \u003d false;\r\n\r\n    if (this \u003d\u003d obj)\r\n    {\r\n      result \u003d true;\r\n    }\r\n    else if (obj instanceof ${primary_type_name})\r\n    {\r\n      result \u003d \r\n      \tgibBusinessObject().equals(\r\n        \t((${primary_type_name}) obj).gibBusinessObject());\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Liefert die eindeutige BoId des Business Objects.\r\n   *\r\n   * @return eindeutige BoId des Business Objects\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public BoId getBoId()\r\n  {\r\n    if (this.boId \u003d\u003d null)\r\n    {\r\n      this.boId \u003d \r\n      \tnew BoId(\r\n        \tthis.serverNr, this.objectNr, this.getRoleName());\r\n    }\r\n\r\n    return this.boId;\r\n  }\r\n\r\n  /**\r\n   * Liefert die Object-Nummer des Business Objects.\r\n   *\r\n   * @return Object-Nummer als long\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public long getObjectNr()\r\n  {\r\n    return this.objectNr;\r\n  }\r\n\r\n  /**\r\n   * Liefert den RoleName der Klasse.\r\n   *\r\n   * @return RoleName der Klasse\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public String getRoleName()\r\n  {\r\n    return getClass().getName();\r\n  }\r\n\r\n  /**\r\n   * Liefert die Server-Nummer des Business Objects.\r\n   *\r\n   * @return Server-Nummer als long\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public long getServerNr()\r\n  {\r\n    return this.serverNr;\r\n  }\r\n\r\n  /**\r\n   * Gibt das TaskServerControllerInterface zurück.\r\n   *\r\n   * @return TaskServerController\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public TaskServerControllerInterface getTaskServerControllerInterface()\r\n  {\r\n    return this.taskServerControllerInterface;\r\n  }\r\n\r\n  /**\r\n   * Liefert die Versionsnummer des Business Objects.\r\n   *\r\n   * @return Versionsnummer als long\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public long getVersion()\r\n  {\r\n    return this.version;\r\n  }\r\n\r\n  /**\r\n   * Liefert das Handle des BusinessObjects, welches sich hinter der Fassade\r\n   * verbirgt.\r\n   * \r\n   * @return ${businessObjectHandleName} Handle der Fassade\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public ${businessObjectHandleName} gibHandle()\r\n  {\r\n    return this.businessObject;\r\n  }\r\n\r\n  /**\r\n   * Initialisierung des Objektes bei Erzeugung\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public void init()\r\n  {\r\n    // Nothing\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.fassaden.interfaces.BoIEntitaetenfassade#init(de.bkm.bes.basis.fassade.BoIFassadenfaehig)\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public void init(final BoIFassadenfaehig aFassadenfaehigeEntitaet)\r\n  {\r\n    if (this.businessObject !\u003d null)\r\n    {\r\n      throw new BesFassadeSchonInitialisiertRuntimeException(String\r\n        .valueOf(this.getBoId()), String.valueOf(this.businessObject.getBoId()));\r\n    }\r\n\r\n    if (aFassadenfaehigeEntitaet instanceof BoIKontextfaehig)\r\n    {\r\n      BotContext kontext \u003d ((BoIKontextfaehig) aFassadenfaehigeEntitaet)\r\n        .gibKontext();\r\n\r\n      if (kontext \u003d\u003d null)\r\n      {\r\n        ((BoIKontextfaehig) aFassadenfaehigeEntitaet)\r\n          .initKontext(BotContext.NEUESTER_ZUSTAND);\r\n      }\r\n    }\r\n    \r\n    this.businessObject \u003d (${businessObjectName}) aFassadenfaehigeEntitaet;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.fassaden.interfaces.BoIEntitaetenfassade#init(de.bkm.bes.basis.fassade.BoIFassadenfaehig, de.jdpe.bof.bo.tm.BotContext)\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public void init(final BoIFassadenfaehig aFassadenfaehigeEntitaet,\r\n    final BotContext aKontext)\r\n  {\r\n    if (this.businessObject !\u003d null)\r\n    {\r\n      throw new BesFassadeSchonInitialisiertRuntimeException(String\r\n        .valueOf(this.getBoId()), String.valueOf(this.businessObject.getBoId()));\r\n    }\r\n\r\n    if (aFassadenfaehigeEntitaet instanceof BoIKontextfaehig)\r\n    {\r\n      ((BoIKontextfaehig) aFassadenfaehigeEntitaet).initKontext(aKontext);\r\n    }\r\n\r\n    this.businessObject \u003d (${businessObjectName}) aFassadenfaehigeEntitaet;\r\n  }\r\n  \r\n  /**\r\n   * Fassadneinterne Methode zur Ermittlung des Business Objects.\r\n   *\r\n   * @return ${businessObjectName} Business Object, welches durch die Fassade repräsentiert wird\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  protected ${businessObjectName} gibBusinessObject()\r\n  {\r\n  \treturn this.businessObject;\r\n  }\r\n\r\n  /**\r\n   * Mit Hilfe dieser Methode setzt der Konstruktor die BoId.\r\n   *\r\n   * @param aBoId BoId für das Objekt\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  protected final void setBoId(final BoId aBoId)\r\n  {\r\n    if (!aBoId.getRoleName().equals(\r\n      this.getRoleName()))\r\n    {\r\n      throw new BoException(\r\n        \"Rolename mismatch: \"\r\n          + this.getRoleName() + \" !\u003d \" + aBoId.getRoleName());\r\n    }\r\n    this.serverNr \u003d aBoId.getServerNr();\r\n    this.objectNr \u003d aBoId.getObjectNr();\r\n    this.boId \u003d aBoId;\r\n  }\r\n\r\n  /**\r\n   * Setzt die Server-Nummer des BusinessObjects.\r\n   * \u003cb\u003eDiese Methode wird von TopLink benötigt, sie darf nicht benutzt werden!\u003c/b\u003e\r\n   *\r\n   * @param aObjectNr Object-Nummer des BusinessObjects\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public void setObjectNr(final long aObjectNr)\r\n  {\r\n    this.objectNr \u003d aObjectNr;\r\n  }\r\n\r\n  /**\r\n   * Setzt die Server-Nummer des BusinessObjects.\r\n   * \u003cb\u003eDiese Methode wird von TopLink benötigt, sie darf nicht benutzt werden!\u003c/b\u003e\r\n   *\r\n   * @param aServerNr Server-Nummer des BusinessObjects\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public void setServerNr(final long aServerNr)\r\n  {\r\n    this.serverNr \u003d aServerNr;\r\n  }\r\n\r\n  /**\r\n   * Setzt den TaskServerController.\r\n   *\r\n   * @param aTsc TaskServerController der die UnitOfWork hält.\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public void setTaskServerControllerInterface(final TaskServerControllerInterface aTsc)\r\n  {\r\n    this.taskServerControllerInterface \u003d aTsc;\r\n  }\r\n\r\n  /**\r\n   * Setzt die Versionsnummer des BusinessObjects.\r\n   * \u003cb\u003eDiese Methode wird von TopLink benötigt, sie darf nicht benutzt werden!\u003c/b\u003e\r\n   *\r\n   * @param aVersionNr Versionsnummer des BusinessObjects\r\n   */\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public void setVersion(final long aVersionNr)\r\n  {\r\n    this.version \u003d aVersionNr;\r\n  }\r\n\r\n  /**\r\n   * @see de.bkm.bes.fassaden.interfaces.BoIEntitaetenfassade#gibEntitaetsBoId()\r\n   */\r\n  @Override\r\n  @ServiceScope(ServiceScopeType.GED)\r\n  public BoId gibEntitaetsBoId()\r\n  {\r\n    return gibBusinessObject().getBoId();\r\n  }\r\n}\r\n\r\n/*\r\n * $$Log$$\r\n */",
  "location": "FILE",
  "filenameRestrictions": [],
  "dependencies": []
}