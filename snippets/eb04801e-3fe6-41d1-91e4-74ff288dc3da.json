{
  "uuid": "eb04801e-3fe6-41d1-91e4-74ff288dc3da",
  "name": "1-To-1",
  "description": "erzeugt eine bidirektionale Relation 1 zu 1",
  "extraSearchTerms": [
    "1to1"
  ],
  "tags": [
    "ged",
    "relation"
  ],
  "code": "${:import(org.eclipse.persistence.indirection.ValueHolder, org.eclipse.persistence.indirection.ValueHolderInterface, de.bkm.bes.basis.annotation.Indexing, de.bkm.bes.basis.annotation.IndexingType)}\r\n\r\n/**\r\n * 1-to-1 bidirektionale Relation  zur Klasse ${targetClassName:var(java.lang.String)}\r\n * Client Bezeichung ${RelationClientBezeichung:var(java.lang.String)}\r\n * Supplier Bezeichung  ${RelationBezeichung:var(java.lang.String)} bzw. ${relationBezeichung:var(java.lang.String)}\r\n */\r\n@Indexing(IndexingType.INDEX)\r\nprivate ValueHolderInterface ${relationBezeichung} \u003d \tnew ValueHolder();\r\n\r\n/**\r\n * Liefert das Objekt, auf das sich die Relation ${relationBezeichung} bezieht.\r\n *\r\n * @return Objekt vom Typ ${targetClassName},\r\n *         auf das die Relation ${relationBezeichung} verweist.\r\n * @see #${relationBezeichung}\r\n */\r\npublic ${targetClassName} get${RelationBezeichung}()\r\n{\r\n  ${targetClassName} obj \u003d (${targetClassName}) this.${relationBezeichung}.getValue();\r\n\r\n  if (obj !\u003d null)\r\n  {\r\n    obj.setTaskServerControllerInterface(getTaskServerControllerInterface());\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Legt fest auf welches Objekt sich die Relation ${relationBezeichung} bezieht.\r\n *\r\n * @param obj Das Objekt, vom Typ ${targetClassName},\r\n *            zu dem eine Relation erzeugt werden soll.\r\n * @see #${relationBezeichung}\r\n */\r\npublic void set${RelationBezeichung}(final ${targetClassName} obj)\r\n{\r\n\t// TOPLink ONE_TO_ONE: Wenn Attribut auf der Gegenseite navigierbar ist\r\n\tif (get${RelationBezeichung}() !\u003d null)\r\n\t{\r\n\t\t//\r\n\t\t//Beziehung auf der Gegenseite (am ${targetClassName}) zu dieser Klasse (${className})\r\n\t\t//mit der set...OneWay-Methode auf null setzen\r\n\t\t//\r\n\t\tget${RelationBezeichung}().set${RelationClientBezeichung}OneWay(null);\r\n\t}\r\n\tif (obj !\u003d null)\r\n\t{\r\n\t  //\r\n\t\t//Beziehung auf der Gegenseite (am ${targetClassName}) zu dieser Klasse (${className})\r\n\t\t//mit der set...OneWay-Methode pflegen\r\n\t\t//\r\n\t\tobj.set${RelationClientBezeichung}OneWay(this);\r\n\t}\r\n\tthis.${relationBezeichung}.setValue(obj);\r\n}\r\n\r\n/**\r\n * Gibt den ValueHolder, bei einer 1:? Relation, für TOPLink zurück.\r\n *\r\n * @return ValueHolder für das lazy-loading von TOPLink\r\n * @see #${relationBezeichung}\r\n */\r\npublic final ValueHolderInterface get${RelationBezeichung}Holder()\r\n{\r\n  ValueHolderInterface holder \u003d this.${relationBezeichung};\r\n\r\n  if (holder.isInstantiated())\r\n  {\r\n    BoInterface bo \u003d (BoInterface) holder.getValue();\r\n    if (bo !\u003d null \u0026\u0026 !bo.getBoId().isValid())\r\n    {\r\n      holder.setValue(null);\r\n    }\r\n  }\r\n  return holder;\r\n}\r\n\r\n/**\r\n * Setzt den ValueHolder, bei einer \"1-zu\" Relation, für TOPLink.\r\n *\r\n * @param aValueHolder ValueHolder für das lazy-loading von TOPLink\r\n * @see #${relationBezeichung}\r\n */\r\npublic final void set${RelationBezeichung}Holder(final ValueHolderInterface aValueHolder)\r\n{\r\n  this.${relationBezeichung} \u003d aValueHolder;\r\n}\r\n\r\n/**\r\n * TOPLink ONE_TO_ONE: Wenn Attribut auf der Gegenseite navigierbar ist.\r\n *\r\n * @param obj ${targetClassName} - Objekt für das eine Relation\r\n *            hergestellt werden soll\r\n * @see #${relationBezeichung}\r\n */\r\npublic final void set${RelationBezeichung}OneWay(final ${targetClassName} obj)\r\n{\r\n\tthis.${relationBezeichung}.setValue(obj);\r\n}",
  "location": "JAVA_TYPE_MEMBERS",
  "filenameRestrictions": [],
  "dependencies": []
}